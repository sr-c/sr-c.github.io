<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SR-C</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sr-c.github.io/"/>
  <updated>2019-07-04T13:20:50.082Z</updated>
  <id>https://sr-c.github.io/</id>
  
  <author>
    <name>sr-c</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用PBJelly与blasr进行补洞</title>
    <link href="https://sr-c.github.io/2019/07/02/PBJelly-and-blasr-installation/"/>
    <id>https://sr-c.github.io/2019/07/02/PBJelly-and-blasr-installation/</id>
    <published>2019-07-02T06:12:47.000Z</published>
    <updated>2019-07-04T13:20:50.082Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用PBJelly进行gap filling</p><a id="more"></a><p>PBJelly在2012年发表于PLoS ONE, 其设计目的是使用PacBio RS Ⅱ 数据来提升assembly的连续性。目前版本停滞在2015年9月1日的<code>15.8.24</code>，但仍然有<code>19 downloads/week</code>的下载热度。</p><h2 id="安装篇"><a href="#安装篇" class="headerlink" title="安装篇"></a>安装篇</h2><h3 id="legacy-blasr"><a href="#legacy-blasr" class="headerlink" title="legacy-blasr"></a>legacy-blasr</h3><p>PBJelly的安装<a href="https://sourceforge.net/p/pb-jelly/wiki/Home/" target="_blank" rel="noopener">说明</a>表示依赖1.3.1版本的<code>blasr</code>，但此版本在2012年，现已难以<a href="https://github.com/OSGConnect/modulefiles/blob/master/recipes/blasr-1.3.1" target="_blank" rel="noopener">安装</a>。</p><p>几番尝试后，我们选择使用PacBio提供的<a href="https://github.com/PacificBiosciences/pitchfork" target="_blank" rel="noopener">pitchfork</a>来编译该过时的软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/software</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/PacificBiosciences/pitchfork.git</span><br><span class="line"><span class="built_in">cd</span> pitchfork</span><br><span class="line">git checkout legacy_blasr</span><br><span class="line"><span class="built_in">echo</span> PREFIX=/opt/mybuild &gt; settings.mk</span><br><span class="line">make init</span><br><span class="line">make blasr</span><br></pre></td></tr></table></figure><p>此过程会下载依赖的各种软件，<code>python3</code>环境中会报错，需要切换到<code>python2.7</code>环境。</p><p>此外，<code>hdf5-1.8.16</code>的下载路径<a href="https://github.com/PacificBiosciences/pitchfork/issues/289" target="_blank" rel="noopener">失效</a>，自行下载<a href="https://hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.16/src/hdf5-1.8.16.tar.gz" target="_blank" rel="noopener">hdf5-1.8.16.tar.gz</a>至<code>pitchfork/ports/thirdparty/hdf5</code>中，重新<code>make blasr</code>可解决。</p><p>编译完成后，实际的<code>blasr</code>版本为<code>5.0.994e5fc</code>，将其导入环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /opt/mybuild/setup-env.sh</span><br></pre></td></tr></table></figure><h3 id="networkx-v1-1"><a href="#networkx-v1-1" class="headerlink" title="networkx v1.1"></a>networkx v1.1</h3><p>说明文档要求<code>1.1</code>版本，实测<code>conda</code>安装的<code>1.1.1</code>版本也可成功运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install networkx==1.1.1</span><br></pre></td></tr></table></figure><blockquote><p>p.s.  在extraction步骤，存在警告</p><p>2019-07-04 20:40:10,451 [INFO] Opening GML Files<br>2019-07-04 20:40:10,452 [WARNING] It is unknown if networkx version 1.11 will work.<br>2019-07-04 20:40:10,452 [WARNING] If you get an error here, please report it!!!</p></blockquote><h3 id="PBJelly"><a href="#PBJelly" class="headerlink" title="PBJelly"></a>PBJelly</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://sourceforge.net/projects/pb-jelly/files/PBSuite_15.8.24.tgz</span><br><span class="line">tar zxf PBSuite_15.8.24.tgz</span><br><span class="line"><span class="built_in">cd</span> PBSuite_15.8.24</span><br><span class="line"><span class="comment">## edit SWEETPATH in setup.sh</span></span><br><span class="line">vi setup.sh</span><br><span class="line"><span class="built_in">source</span> setup.sh</span><br></pre></td></tr></table></figure><h2 id="测试篇"><a href="#测试篇" class="headerlink" title="测试篇"></a>测试篇</h2><p>按照示例<a href="https://github.com/alvaralmstedt/Tutorials/wiki/Gap-closing-with-PBJelly" target="_blank" rel="noopener">教程</a>进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/PBSuite/docs/jellyExample</span><br><span class="line"><span class="comment">## edit the paths in the &lt;reference&gt; , &lt;outputDir&gt; and the baseDir attribute in the inputs tag to the full path in Protocol.xml</span></span><br><span class="line">vi Protocol.xml</span><br><span class="line"></span><br><span class="line"><span class="comment">#Jelly.py &lt;stage&gt; Protocol.xml</span></span><br><span class="line">Jelly.py setup &lt;jellyprotocol.xml&gt;</span><br><span class="line">Jelly.py mapping &lt;jellyprotocol.xml&gt;</span><br><span class="line">Jelly.py support &lt;jellyprotocol.xml&gt;</span><br><span class="line">Jelly.py extraction &lt;jellyprotocol.xml&gt;</span><br><span class="line">Jelly.py assembly &lt;jellyprotocol.xml&gt; -x “--nproc=4”</span><br><span class="line">Jelly.py output &lt;jellyprotocol.xml&gt;</span><br><span class="line"></span><br><span class="line">grep -Ho N jelly.out.fasta | uniq -c</span><br></pre></td></tr></table></figure><p>运行成功，会将输入的3条contig连接为1条，N的数目由1494降至0</p><h2 id="检查输入"><a href="#检查输入" class="headerlink" title="检查输入"></a>检查输入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sumarizeAssembly.py &lt;reference.fasta&gt;</span><br><span class="line">readSummary.py &lt;Protocol.xml&gt;</span><br></pre></td></tr></table></figure><p>PBJelly要求的reference输入格式只能是fasta格式，且后缀只能是<code>.fasta</code>；reads的输入格式可以为<code>fastq</code>或<code>fasta</code>，但输入fasta时要求有相应的质量文件</p><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Jelly.py setup &lt;jellyprotocol.xml&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">##切换到screen中运行</span></span><br><span class="line">screen -S PBJelly</span><br><span class="line">Jelly.py mapping &lt;jellyprotocol.xml&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">##比对步骤很快结束，查验mapping文件夹内的mapping/xxx.fastq.err</span></span><br><span class="line">cat mapping/xxx.fastq.err</span><br><span class="line">2019-07-02 20:03:34,546 [INFO] Running /path/to/software/PBSuite_15.8.24/bin/m4pie.py /path/to/workdir/04.genome_assembling/gap-filling/PBJelly/yourAssembly/mapping/AssemblyXXX.fastq.m4 /path/to/workdir/04.genome_assembling/gap-filling/PBJelly/yourAssembly/data/reads/AssemblyXXX.fastq /path/to/workdir/04.genome_assembling/gap-filling/PBJelly/yourAssembly/data/reference/scaffolds_FINAL.fasta --nproc 4 -i</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"/path/to/software/PBSuite_15.8.24/bin/m4pie.py"</span>, line 209, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    run(sys.argv[1:])</span><br><span class="line">  File <span class="string">"/path/to/software/PBSuite_15.8.24/bin/m4pie.py"</span>, line 171, <span class="keyword">in</span> run</span><br><span class="line">    aligns = M4File(args.m4)</span><br><span class="line">  File <span class="string">"/path/to/software/PBSuite_15.8.24/pbsuite/utils/FileHandlers.py"</span>, line 484, <span class="keyword">in</span> __init__</span><br><span class="line">    file = open(file,<span class="string">'r'</span>)</span><br><span class="line">IOError: [Errno 2] No such file or directory: <span class="string">'/path/to/workdir/04.genome_assembling/gap-filling/PBJelly/yourAssembly/mapping/AssemblyXXX.fastq.m4</span></span><br></pre></td></tr></table></figure><p>搜索<code>PBSuite_15.8.24/bin/m4pie.py no such file</code>，能发现很多类似情况的报错</p><blockquote><p><a href="https://sourceforge.net/p/pb-jelly/discussion/pbjtiks/thread/0c780910/?limit=25" target="_blank" rel="noopener">https://sourceforge.net/p/pb-jelly/discussion/pbjtiks/thread/0c780910/?limit=25</a></p><p><a href="https://www.biostars.org/p/198519/" target="_blank" rel="noopener">https://www.biostars.org/p/198519/</a></p><p><a href="https://sourceforge.net/p/pb-jelly/discussion/pbjtiks/thread/e351eed7/#a608" target="_blank" rel="noopener">https://sourceforge.net/p/pb-jelly/discussion/pbjtiks/thread/e351eed7/#a608</a></p></blockquote><p>原因不一，包括新旧版本<code>blasr</code>在参数输入中，使用<code>-</code>与<code>--</code>的不同。</p><p>在<code>pbsuite/utils/CommandRunner.py</code>的第18行的<code>subprocess.Popen()</code>函数中<a href="https://sourceforge.net/p/pb-jelly/discussion/pbjtiks/thread/0c780910/#47df" target="_blank" rel="noopener">添加</a><code>executable=&quot;/bin/bash&quot;</code></p><p>但此次报错的可能原因在于<code>screen</code>后的环境配置与原环境不同，使<code>blasr</code>不能正常运行。</p><h4 id="判断依据"><a href="#判断依据" class="headerlink" title="判断依据"></a>判断依据</h4><p>在screen屏幕中，<code>blasr</code>不可执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blasr --<span class="built_in">help</span></span><br><span class="line">blasr: error <span class="keyword">while</span> loading shared libraries: libpbihdf.so: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>在原环境中执行<code>Jelly.py mapping &lt;jellyprotocol.xml&gt;</code>, <code>blasr</code>即可正常运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 传递debug参数，帮助排查问题</span></span><br><span class="line">Jelly.py mapping &lt;jellyprotocol.xml&gt; -x <span class="string">"--debug"</span></span><br></pre></td></tr></table></figure><h4 id="小tips"><a href="#小tips" class="headerlink" title="小tips"></a>小tips</h4><p><code>Ctrl + C</code>手动终止<code>mapping</code>任务时，需注意，<code>blasr</code>不会相应终止，需要在任务管理器中终止。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>运行PBJelly之前，需要依次激活下列环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## pitchfork编译的legacy-blasr环境</span></span><br><span class="line"><span class="built_in">source</span> ~/opt/pitchfock/setup-env.sh</span><br><span class="line"><span class="comment">## 安装有networkx1.1的python2.7环境</span></span><br><span class="line"><span class="built_in">source</span> activate SALSA</span><br><span class="line"><span class="comment">## PBSuite环境</span></span><br><span class="line"><span class="built_in">source</span> ~/software/PBSuite_15.8.24/setup.sh</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="http://onsnetwork.org/kubu4/2017/10/30/software-installation-pb-jelly-suite-and-blasr-on-emu/" target="_blank" rel="noopener">http://onsnetwork.org/kubu4/2017/10/30/software-installation-pb-jelly-suite-and-blasr-on-emu/</a></p><p><a href="https://genefish.wordpress.com/2017/04/06/pbjelly-pt-2/" target="_blank" rel="noopener">https://genefish.wordpress.com/2017/04/06/pbjelly-pt-2/</a></p><p><a href="https://github.com/alvaralmstedt/Tutorials/wiki/Gap-closing-with-PBJelly" target="_blank" rel="noopener">https://github.com/alvaralmstedt/Tutorials/wiki/Gap-closing-with-PBJelly</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用PBJelly进行gap filling&lt;/p&gt;
    
    </summary>
    
    
      <category term="PBJelly" scheme="https://sr-c.github.io/tags/PBJelly/"/>
    
      <category term="blasr" scheme="https://sr-c.github.io/tags/blasr/"/>
    
      <category term="PacBio" scheme="https://sr-c.github.io/tags/PacBio/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq-123</title>
    <link href="https://sr-c.github.io/2019/06/20/RNA-seq-123/"/>
    <id>https://sr-c.github.io/2019/06/20/RNA-seq-123/</id>
    <published>2019-06-20T13:21:34.000Z</published>
    <updated>2019-06-22T14:29:10.000Z</updated>
    
    <content type="html"><![CDATA[<p class="description">RNA-seq下游分析</p><a id="more"></a><h2 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(limma)</span><br><span class="line"><span class="keyword">library</span>(Glimma)</span><br><span class="line"><span class="keyword">library</span>(edgeR)</span><br><span class="line"><span class="keyword">library</span>(Mus.musculus)</span><br></pre></td></tr></table></figure><h2 id="读入数据"><a href="#读入数据" class="headerlink" title="读入数据"></a>读入数据</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用DGEList读取counts矩阵</span></span><br><span class="line">genelist &lt;- DGEList(counts = salmon_counts[<span class="number">2</span>:<span class="number">31</span>], group = group)</span><br><span class="line"><span class="comment">#使用tximport读入数据</span></span><br><span class="line"><span class="comment">## 读入分组信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##读入基因注释信息</span></span><br><span class="line">genelist$genes</span><br></pre></td></tr></table></figure><h2 id="过滤低表达基因"><a href="#过滤低表达基因" class="headerlink" title="过滤低表达基因"></a>过滤低表达基因</h2><p>推荐使用<code>edgeR</code>提供的<code>filterByExpr</code>函数进行过滤</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直接根据所有样品中的表达量进行过滤</span></span><br><span class="line">table(rowSums(genelist$counts==<span class="number">0</span>)==<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用</span></span><br><span class="line">keep.exprs &lt;- filterByExpr(genelist, group = group)</span><br><span class="line">genelist &lt;- genelist[keep.exprs,, keep.lib.sizes=<span class="literal">FALSE</span>]</span><br><span class="line">dim(genelist)</span><br></pre></td></tr></table></figure><h2 id="标准化"><a href="#标准化" class="headerlink" title="标准化"></a>标准化</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x &lt;- calcNormFactors(genelist, method = <span class="string">"TMM"</span>)</span><br><span class="line"></span><br><span class="line">x$genes &lt;- x$genes[rownames(x$counts),]</span><br></pre></td></tr></table></figure><h2 id="差异表达分析"><a href="#差异表达分析" class="headerlink" title="差异表达分析"></a>差异表达分析</h2><h3 id="limma-voom"><a href="#limma-voom" class="headerlink" title="limma-voom"></a>limma-voom</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入设计矩阵</span></span><br><span class="line">design &lt;- model.matrix(~<span class="number">0</span>+group)</span><br><span class="line">colnames(design) &lt;- levels(group)</span><br><span class="line">logcpm &lt;- cpm(x, log = <span class="literal">TRUE</span>, prior.count = <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">contr.matrix &lt;- makeContrasts(</span><br><span class="line">  IOZ07.vs.1621 = Mature - Mature1621,</span><br><span class="line">  Mature.vs.vitro = Mature - Invitro,</span><br><span class="line">  vitro.vs.1621 = Proliferation - Mature,</span><br><span class="line">  Mature.vs.Transition = Mature - Transition,</span><br><span class="line">  Transition.vs.Mycelium = Transition - Mycelium,</span><br><span class="line">  levels = colnames(design)</span><br><span class="line">)</span><br><span class="line">v &lt;- voom(x, design, plot = <span class="literal">TRUE</span>)</span><br><span class="line">vfit &lt;- lmFit(v, design)</span><br><span class="line">vfit &lt;- contrasts.fit(vfit, contrasts = contr.matrix)</span><br><span class="line">efit &lt;- eBayes(vfit)</span><br><span class="line">plotSA(efit, main=<span class="string">"Final model: Mean-variance trend"</span>)</span><br><span class="line">summary(decideTests(efit))</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://bioconductor.org/packages/release/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow_CHN.html" target="_blank" rel="noopener">https://bioconductor.org/packages/release/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow_CHN.html</a><br><a href="https://github.com/COMBINE-lab/continuous_analysis_rnaseq" target="_blank" rel="noopener">https://github.com/COMBINE-lab/continuous_analysis_rnaseq</a><br><a href="https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#limma-voom" target="_blank" rel="noopener">https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#limma-voom</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;RNA-seq下游分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="RNAS-seq" scheme="https://sr-c.github.io/tags/RNAS-seq/"/>
    
  </entry>
  
  <entry>
    <title>Hexo升级</title>
    <link href="https://sr-c.github.io/2019/06/05/hexo-upgrade/"/>
    <id>https://sr-c.github.io/2019/06/05/hexo-upgrade/</id>
    <published>2019-06-05T10:01:20.000Z</published>
    <updated>2019-06-12T09:50:17.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description">Hexo升级时需要注意调整配置文件</p><a id="more"></a><h1 id="升级方案"><a href="#升级方案" class="headerlink" title="升级方案"></a>升级方案</h1><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><h3 id="使用n模块管理node版本"><a href="#使用n模块管理node版本" class="headerlink" title="使用n模块管理node版本"></a>使用n模块管理node版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前node版本</span></span><br><span class="line">node -v</span><br><span class="line"><span class="comment">#清除npm chche</span></span><br><span class="line">npm cache clean -f</span><br><span class="line"><span class="comment">#安装n模块</span></span><br><span class="line">npm install -g n</span><br><span class="line"><span class="comment">#使用n模块安装最新稳定版</span></span><br><span class="line">n stable</span><br><span class="line"><span class="comment">#或者使用n模块安装指定版本</span></span><br><span class="line">n 8.1.2</span><br></pre></td></tr></table></figure><p>Windows下还可以以安装包直接覆盖安装，进行升级。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看node安装路径</span></span><br><span class="line"><span class="built_in">where</span> node</span><br></pre></td></tr></table></figure><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>直接使用<code>npm i hexo-cli -g</code> 和 <code>npm update</code>升级并不完整。正确的姿势是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装npm-check与npm-upgrade</span></span><br><span class="line">npm install -g npm-check</span><br><span class="line">npm install -g npm-upgrade</span><br><span class="line"><span class="comment">#检查并更新</span></span><br><span class="line">npm-check</span><br><span class="line">npm-upgrade</span><br><span class="line"><span class="comment">#一路回车确认安装即可</span></span><br><span class="line"><span class="comment">#在本地生产环境安装</span></span><br><span class="line">npm install --save</span><br></pre></td></tr></table></figure><p>最后一步的作用如下</p><ul><li>会把依赖包安装到 node_modules 目录中</li><li>会在package.json的dependencies属性下添加依赖包的名称和版本号</li><li>之后运行npm install命令时，会自动安装依赖包到node_modules目录中</li></ul><p>查看<code>package.json</code>中的<code>dependencies</code>属性可确认更新。</p><h2 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h2><p>Hexo主题的<a href="https://github.com/theme-next/hexo-theme-next#update" target="_blank" rel="noopener">更新说明</a>是直接通过<code>git pull</code>更新，但是跨度较大时，你很可能会发现配置文件挂掉。因此，我们需要采取单独的配置<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/DATA-FILES.md#option-2-next-way" target="_blank" rel="noopener">策略</a></p><p>简单来说，就是将站点和主题的配置一起放置在<code>source/_data/next.yml</code>，而不需要单独去管理站点配置<code>_config.yml</code>和主题配置<code>theme/next/_config.yml</code></p><p>首先，确认主题默认配置<code>theme/next/_config.yml</code>中的<code>override</code>设置为<code>false</code>。然后，将站点配置<code>_config.yml</code>的<strong>全部</strong>内容和主题配置<code>theme/next/_config.yml</code>中<strong>自定义</strong>的部分，整合到<code>source/_data/next.yml</code>，以后该文件即可完成所有的配置。</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://juejin.im/post/5c09e47ee51d45721d71087d" target="_blank" rel="noopener">https://juejin.im/post/5c09e47ee51d45721d71087d</a></p><p><a href="https://hexo.imydl.tech/archives/51612.html" target="_blank" rel="noopener">https://hexo.imydl.tech/archives/51612.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;Hexo升级时需要注意调整配置文件&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://sr-c.github.io/tags/Hexo/"/>
    
      <category term="node.js" scheme="https://sr-c.github.io/tags/node-js/"/>
    
      <category term="Next" scheme="https://sr-c.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Salmon快速转录本定量</title>
    <link href="https://sr-c.github.io/2019/05/28/salmon-tximport/"/>
    <id>https://sr-c.github.io/2019/05/28/salmon-tximport/</id>
    <published>2019-05-28T14:49:08.000Z</published>
    <updated>2019-06-12T09:50:17.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用便捷的方式解决问题</p><a id="more"></a><h2 id="Scallop"><a href="#Scallop" class="headerlink" title="Scallop"></a>Scallop</h2><p>Scallop可组装出新转录本，作为特定条件下的<a href="https://vidotto.top/post/scallop%E5%92%8Csalmon%E5%BA%94%E7%94%A8%E8%BD%AC%E5%BD%95%E6%9C%AC%E5%AE%9A%E9%87%8F%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">补充</a>。</p><h2 id="Salmon"><a href="#Salmon" class="headerlink" title="Salmon"></a>Salmon</h2><p>构建索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salmon index -t athal.fa.gz -i athal_index --<span class="built_in">type</span> quasi -k 31</span><br></pre></td></tr></table></figure><p>直接定量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salmon quant -i transcripts_index  -l A -1 reads_1.fastq.gz -2 reads_2.fastq.gz -o transcripts_valid -p 16 --validateMappings</span><br></pre></td></tr></table></figure><p>结果导入</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(tximport)</span><br><span class="line">txi.salmon &lt;- tximport(<span class="string">'quant.sf'</span>, type = <span class="string">"salmon"</span>, tx2gene = tx2gene)</span><br></pre></td></tr></table></figure><h2 id="多样本处理"><a href="#多样本处理" class="headerlink" title="多样本处理"></a>多样本处理</h2><h3 id="循环处理"><a href="#循环处理" class="headerlink" title="循环处理"></a>循环处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> fn <span class="keyword">in</span> ERR1698&#123;194..209&#125;;</span><br><span class="line"><span class="keyword">do</span>    samp=`basename <span class="variable">$&#123;fn&#125;</span>`    </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Processin sample <span class="variable">$&#123;sampe&#125;</span>"</span>   </span><br><span class="line">salmon quant -i athal_index -l A \</span><br><span class="line">        -1 <span class="variable">$&#123;samp&#125;</span>_1.fastq.gz \</span><br><span class="line">        -2 <span class="variable">$&#123;samp&#125;</span>_2.fastq.gz \</span><br><span class="line">        -p 8 -o quants/<span class="variable">$&#123;samp&#125;</span>_valid \</span><br><span class="line">        --validateMappings</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="声明结果文件路径"><a href="#声明结果文件路径" class="headerlink" title="声明结果文件路径"></a>声明结果文件路径</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir &lt;- <span class="string">"C:/Users/Xu/Desktop/"</span></span><br><span class="line">list.files(dir)</span><br><span class="line">sample &lt;- paste0(<span class="string">"ERR1698"</span>,seq(<span class="number">194</span>,<span class="number">209</span>),<span class="string">"_valid"</span>)</span><br><span class="line">files &lt;- file.path(dir,<span class="string">"quants"</span>,sample,<span class="string">"quant.sf"</span>)</span><br><span class="line">names(files) &lt;- paste0(<span class="string">"sample"</span>,c(<span class="number">1</span>:<span class="number">16</span>))</span><br><span class="line">all(file.exists(files))</span><br></pre></td></tr></table></figure><h3 id="准备转录本与基因的对应关系"><a href="#准备转录本与基因的对应关系" class="headerlink" title="准备转录本与基因的对应关系"></a>准备转录本与基因的对应关系</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从公共数据获取</span></span><br><span class="line"><span class="keyword">library</span>(AnnotationHub)</span><br><span class="line">ah &lt;- AnnotationHub()</span><br><span class="line">ath &lt;- query(ah,<span class="string">'thaliana'</span>)</span><br><span class="line">ath_tx &lt;- ath[[<span class="string">'AH52247'</span>]]columns(ath_tx)</span><br><span class="line">k &lt;- keys(ath_tx,keytype = <span class="string">"GENEID"</span>)</span><br><span class="line">df &lt;- select(ath_tx, keys=k, keytype = <span class="string">"GENEID"</span>,columns = <span class="string">"TXNAME"</span>)</span><br><span class="line">tx2gene &lt;- df[,<span class="number">2</span>:<span class="number">1</span>] <span class="comment"># TXID在前， GENEID在后</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或自行制备</span></span><br><span class="line">GENEID &lt;- paste0(<span class="string">"ObjectGene"</span>,sprintf(<span class="string">"%04d"</span>, c(<span class="number">1</span>:<span class="number">8946</span>)))</span><br><span class="line">TXNAME &lt;- paste0(<span class="string">"ObjectGene"</span>,sprintf(<span class="string">"%04d"</span>, c(<span class="number">1</span>:<span class="number">8946</span>)))</span><br><span class="line">tx2gene &lt;- data.frame(GENEID, TXNAME)</span><br></pre></td></tr></table></figure><h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># install.packages("readr")</span></span><br><span class="line"><span class="comment"># install.packages("rsjon")</span></span><br><span class="line"><span class="keyword">library</span>(<span class="string">"tximport"</span>)</span><br><span class="line"><span class="keyword">library</span>(<span class="string">"readr"</span>)</span><br><span class="line">txi &lt;- tximport(files, type = <span class="string">"salmon"</span>, tx2gene = tx2gene)</span><br><span class="line"></span><br><span class="line">names(txi)</span><br><span class="line"></span><br><span class="line">head(txi$length)</span><br><span class="line">head(txi$counts)</span><br><span class="line"></span><br><span class="line">write.csv(txi$abundance, <span class="string">"salmon_valid_TPM.csv"</span>, quote = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><h3 id="计算差异表达"><a href="#计算差异表达" class="headerlink" title="计算差异表达"></a>计算差异表达</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"DESeq2"</span>)</span><br><span class="line">sampleTable &lt;- data.frame(condition = factor(rep(c(<span class="string">"Day0"</span>,<span class="string">"Day1"</span>,<span class="string">"Day2"</span>,<span class="string">"Day3"</span>),each=<span class="number">4</span>)))</span><br><span class="line">rownames(sampleTable) &lt;- colnames(txi$counts)</span><br><span class="line">dds &lt;- DESeqDataSetFromTximport(txi, sampleTable, ~condition)</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="http://www.biotrainee.com/thread-1586-1-1.html" target="_blank" rel="noopener">http://www.biotrainee.com/thread-1586-1-1.html</a></p><p><a href="http://www.biotrainee.com/thread-1602-1-1.html" target="_blank" rel="noopener">http://www.biotrainee.com/thread-1602-1-1.html</a></p><p><a href="https://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html" target="_blank" rel="noopener">https://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html</a></p><p><a href="https://vidotto.top/post/scallop%E5%92%8Csalmon%E5%BA%94%E7%94%A8%E8%BD%AC%E5%BD%95%E6%9C%AC%E5%AE%9A%E9%87%8F%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">https://vidotto.top/post/scallop%E5%92%8Csalmon%E5%BA%94%E7%94%A8%E8%BD%AC%E5%BD%95%E6%9C%AC%E5%AE%9A%E9%87%8F%E5%88%86%E6%9E%90/</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用便捷的方式解决问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
      <category term="RNA-seq" scheme="https://sr-c.github.io/tags/RNA-seq/"/>
    
      <category term="Salmon" scheme="https://sr-c.github.io/tags/Salmon/"/>
    
      <category term="tximport" scheme="https://sr-c.github.io/tags/tximport/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq的表达量计算单元</title>
    <link href="https://sr-c.github.io/2019/05/27/RNA-seq-expression-units/"/>
    <id>https://sr-c.github.io/2019/05/27/RNA-seq-expression-units/</id>
    <published>2019-05-27T15:08:52.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">对转录组数据的定量</p><a id="more"></a><p>定量过程可以分为三个水平：基因水平(gene-level), 转录本水平(transcript-level), 外显子水平(exon-usage-level).</p><h2 id="标准化过程"><a href="#标准化过程" class="headerlink" title="标准化过程"></a>标准化过程</h2><p>考虑<code>测序深度</code>与<code>转录本长度</code>对表达量的影响</p><h3 id="TPM"><a href="#TPM" class="headerlink" title="TPM"></a>TPM</h3><p>Transcripts per million (TPM) 是对RNA-seq的推荐标准化方法。</p><p><img src="https://s0.wp.com/latex.php?latex=%5Ctext%7BTPM%7D_i+%3D+%5Cdfrac%7BX_i%7D%7B%5Cwidetilde%7Bl%7D_i%7D+%5Ccdot+%5Cleft%28+%5Cdfrac%7B1%7D%7B%5Csum_j+%5Cdfrac%7BX_j%7D%7B%5Cwidetilde%7Bl%7D_j%7D%7D+%5Cright%29+%5Ccdot+10%5E6&bg=ffffff&fg=000000&s=0" alt="\text{TPM}_i = \dfrac{X_i}{\widetilde{l}_i} \cdot \left( \dfrac{1}{\sum_j \dfrac{X_j}{\widetilde{l}_j}} \right) \cdot 10^6"></p><h3 id="RPKM-FPKM"><a href="#RPKM-FPKM" class="headerlink" title="RPKM/FPKM"></a>RPKM/FPKM</h3><p>由counts直接除以测序深度与转录本长度，计算得到</p><p><img src="https://s0.wp.com/latex.php?latex=%5Ctext%7BFPKM%7D_i+%3D+%5Cdfrac%7BX_i%7D%7B+%5Cleft%28%5Cdfrac%7B%5Cwidetilde%7Bl%7D_i%7D%7B10%5E3%7D%5Cright%29+%5Cleft%28+%5Cdfrac%7BN%7D%7B10%5E6%7D+%5Cright%29%7D+%3D+%5Cdfrac%7BX_i%7D%7B%5Cwidetilde%7Bl%7D_i+N%7D+%5Ccdot+10%5E9++&bg=ffffff&fg=000000&s=0" alt="\text{FPKM}_i = \dfrac{X_i}{ \left(\dfrac{\widetilde{l}_i}{10^3}\right) \left( \dfrac{N}{10^6} \right)} = \dfrac{X_i}{\widetilde{l}_i N} \cdot 10^9  "></p><h3 id="FPKM-to-TPM"><a href="#FPKM-to-TPM" class="headerlink" title="FPKM to TPM"></a>FPKM to TPM</h3><p>TPM的计算公式可变形为</p><p><img src="https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++%5Ctext%7BTPM%7D_i+%26%3D+%5Cdfrac%7BX_i%7D%7B%5Cwidetilde%7Bl%7D_i%7D+%5Ccdot+%5Cleft%28+%5Cdfrac%7B1%7D%7B%5Csum_j+%5Cdfrac%7BX_j%7D%7B%5Cwidetilde%7Bl%7D_j%7D%7D+%5Cright%29+%5Ccdot+10%5E6+%5C%5C++%26%5Cpropto+%5Cdfrac%7BX_i%7D%7B%5Cwidetilde%7Bl%7D_i+%5Ccdot+N%7D+%5Ccdot+%5Cleft%28+%5Cdfrac%7B1%7D%7B%5Csum_j+%5Cdfrac%7BX_j%7D%7B%5Cwidetilde%7Bl%7D_j+%5Ccdot+N%7D+%7D+%5Cright%29+%5C%5C++%26%5Cpropto+%5Cdfrac%7BX_i%7D%7B%5Cwidetilde%7Bl%7D_i+%5Ccdot+N%7D+%5Ccdot+10%5E9+++%5Cend%7Baligned%7D++&bg=ffffff&fg=000000&s=0" alt="\begin{aligned}  \text{TPM}_i &amp;= \dfrac{X_i}{\widetilde{l}_i} \cdot \left( \dfrac{1}{\sum_j \dfrac{X_j}{\widetilde{l}_j}} \right) \cdot 10^6 \\  &amp;\propto \dfrac{X_i}{\widetilde{l}_i \cdot N} \cdot \left( \dfrac{1}{\sum_j \dfrac{X_j}{\widetilde{l}_j \cdot N} } \right) \\  &amp;\propto \dfrac{X_i}{\widetilde{l}_i \cdot N} \cdot 10^9   \end{aligned}  "></p><p>因此，可以由FPKM转化得到TPM</p><p><img src="https://s0.wp.com/latex.php?latex=%5Cbegin%7Baligned%7D++%5Ctext%7BTPM%7D_i+%26%3D+%5Cleft%28+%5Cdfrac%7B%5Ctext%7BFPKM%7D_i%7D%7B%5Csum_j+%5Ctext%7BFPKM%7D_j+%7D+%5Cright%29+%5Ccdot+10%5E6++%5Cend%7Baligned%7D++&bg=ffffff&fg=000000&s=0" alt="\begin{aligned}  \text{TPM}_i &amp;= \left( \dfrac{\text{FPKM}_i}{\sum_j \text{FPKM}_j } \right) \cdot 10^6  \end{aligned}  "></p><h2 id="R-code"><a href="#R-code" class="headerlink" title="R code"></a>R code</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">countToTpm &lt;- <span class="keyword">function</span>(counts, effLen)</span><br><span class="line">&#123;</span><br><span class="line">    rate &lt;- log(counts) - log(effLen)</span><br><span class="line">    denom &lt;- log(sum(exp(rate)))</span><br><span class="line">    exp(rate - denom + log(<span class="number">1e6</span>))</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">countToFpkm &lt;- <span class="keyword">function</span>(counts, effLen)</span><br><span class="line">&#123;</span><br><span class="line">    N &lt;- sum(counts)</span><br><span class="line">    exp( log(counts) + log(<span class="number">1e9</span>) - log(effLen) - log(N) )</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">fpkmToTpm &lt;- <span class="keyword">function</span>(fpkm)</span><br><span class="line">&#123;</span><br><span class="line">    exp(log(fpkm) - log(sum(fpkm)) + log(<span class="number">1e6</span>))</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">countToEffCounts &lt;- <span class="keyword">function</span>(counts, len, effLen)</span><br><span class="line">&#123;</span><br><span class="line">    counts * (len / effLen)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"><span class="comment"># An example</span></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line">cnts &lt;- c(<span class="number">4250</span>, <span class="number">3300</span>, <span class="number">200</span>, <span class="number">1750</span>, <span class="number">50</span>, <span class="number">0</span>)</span><br><span class="line">lens &lt;- c(<span class="number">900</span>, <span class="number">1020</span>, <span class="number">2000</span>, <span class="number">770</span>, <span class="number">3000</span>, <span class="number">1777</span>)</span><br><span class="line">countDf &lt;- data.frame(count = cnts, length = lens)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># assume a mean(FLD) = 203.7</span></span><br><span class="line">countDf$effLength &lt;- countDf$length - <span class="number">203.7</span> + <span class="number">1</span></span><br><span class="line">countDf$tpm &lt;- with(countDf, countToTpm(count, effLength))</span><br><span class="line">countDf$fpkm &lt;- with(countDf, countToFpkm(count, effLength))</span><br><span class="line">with(countDf, all.equal(tpm, fpkmToTpm(fpkm)))</span><br><span class="line">countDf$effCounts &lt;- with(countDf, countToEffCounts(count, length, effLength))</span><br></pre></td></tr></table></figure><p>使用<code>apply</code>函数计算TPM</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tpms &lt;- apply(expMatrix, <span class="number">2</span>, fpkmToTpm)</span><br><span class="line">tpms[<span class="number">1</span>:<span class="number">3</span>,]</span><br></pre></td></tr></table></figure><p>检查每列的总和是否一致</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">colSums(tpms)</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://haroldpimentel.wordpress.com/2014/05/08/what-the-fpkm-a-review-rna-seq-expression-units/" target="_blank" rel="noopener">https://haroldpimentel.wordpress.com/2014/05/08/what-the-fpkm-a-review-rna-seq-expression-units/</a></p><p><a href="https://www.jianshu.com/p/9dfb65e405e8" target="_blank" rel="noopener">https://www.jianshu.com/p/9dfb65e405e8</a></p><p><a href="https://zhuanlan.zhihu.com/p/26750663" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26750663</a></p><p><a href="http://www.bioinfo-scrounger.com/archives/342" target="_blank" rel="noopener">http://www.bioinfo-scrounger.com/archives/342</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;对转录组数据的定量&lt;/p&gt;
    
    </summary>
    
    
      <category term="RNA-seq" scheme="https://sr-c.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>在manjaro上配置工作环境</title>
    <link href="https://sr-c.github.io/2019/05/11/manjaro-quickstart/"/>
    <id>https://sr-c.github.io/2019/05/11/manjaro-quickstart/</id>
    <published>2019-05-11T11:48:51.000Z</published>
    <updated>2019-06-12T09:50:17.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description">在manjaro上配置工作环境</p><a id="more"></a><p>最近看老莱视频，了解到用户友好的<code>manjaro</code>(竟然内置steam), 再加上强大的AUG, 忍不住来尝试一下。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用<code>dd</code>将安装镜像写入到u盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#确认u盘的挂载位置，写入前取消挂载</span></span><br><span class="line">df -h</span><br><span class="line">umount /dev/sdx</span><br><span class="line"><span class="comment">#使用dd命令写入</span></span><br><span class="line">dd <span class="keyword">if</span>=path/to/manjaro.iso of=/dev/sdx bs=4M status=progress</span><br></pre></td></tr></table></figure><p>系统安装过程非常方便，<code>manjaro</code>的安装引导非常友好，在分区过程的提示很细致，还会提示每个磁盘的分区表类型。</p><p>最简单安装只需指定efi的引导分区<code>/boot/efi</code>和<code>/</code>挂载点即可</p><blockquote><p>由于 Windows10 本身的引导分区就是 ESP 分区，所以到分区的界面，只需要将 /boot/efi 挂载到 ESP 分区即可。</p></blockquote><h2 id="软件源配置"><a href="#软件源配置" class="headerlink" title="软件源配置"></a>软件源配置</h2><p>安装时语言设置为en.utf-8, 时区设置为上海，默认就安装了中文支持。</p><h3 id="软件源"><a href="#软件源" class="headerlink" title="软件源"></a>软件源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选择最快的镜像源</span></span><br><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br><span class="line"><span class="comment">#刷新缓存</span></span><br><span class="line">sudo pacman -Syy</span><br></pre></td></tr></table></figure><h3 id="添加ArchLinuxCN源"><a href="#添加ArchLinuxCN源" class="headerlink" title="添加ArchLinuxCN源"></a>添加ArchLinuxCN源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在文件/etc/pacman.conf末尾添加如下内容</span></span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">'[archlinuxcn]\nSigLevel = Optional TrustedOnly\nServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch'</span> &gt;&gt; /etc/pacman.conf</span><br><span class="line"><span class="comment">#导入archlinuxcn-keyring</span></span><br><span class="line">sudo pacman -Syy &amp;&amp; sudo pacman -S archlinuxcn-keyring</span><br><span class="line"><span class="comment">#再次刷新缓存，下载速度应该就比较令人满意了</span></span><br><span class="line">sudo panman -Syy</span><br></pre></td></tr></table></figure><h2 id="时间设置"><a href="#时间设置" class="headerlink" title="时间设置"></a>时间设置</h2><p>对于<code>Windows</code>与<code>linux</code>双系统的用户，系统时间的设置往往是一个比较头疼的问题。</p><h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure><p>可以看到，系统时间实际分为<code>Local time</code>,<code>Universal time</code>与<code>RTC time</code></p><p>Windows使用的是本地时间<code>Local time</code>, 而UNIX使用的是UTC时间<code>Universal time</code>. </p><p>Windows会认为主板BIOS上的硬件时间就是本地时间，同步时间后也会将时间写入BIOS. UNIX则认为硬件时间是UTC时间，同步时间后会将本地时间按照时区计算后得到的UTC时间写入主板。</p><p>这样，在一个已有Windows的电脑上，BIOS的硬件时间就会被写为本地时间。之后安装的UNIX会将BIOS上的硬件时间识别为UTC时间，再根据时区信息计算出本地时间，显示在系统上。因此，我们会看到UNIX默认显示的时间与实际本地时间相差8个小时。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>因此，该问题就存在两种解决方案。一是让Linux使用本地时间<code>local time</code>, 或是让Windows使用UTC时间。以下方案择一即可。</p><h4 id="Linux方案"><a href="#Linux方案" class="headerlink" title="Linux方案"></a>Linux方案</h4><p>修改为本地时间（目前使用此方案）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl <span class="built_in">set</span>-local-rtc 1 --adjust-system-clock</span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp 0</span><br></pre></td></tr></table></figure><p><a href="https://alexiachen.github.io/blog/2018/08/11/manjaro-hello/" target="_blank" rel="noopener">使用NTP同步时间</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ntpdate cn.ntp.org.cn <span class="comment">#可以换成任何一个公开的NTP Server地址</span></span><br></pre></td></tr></table></figure><h4 id="Windows方案"><a href="#Windows方案" class="headerlink" title="Windows方案"></a>Windows方案</h4><p>修改注册表，且需关闭时间同步。（未执行）</p><blockquote><p>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation]</p><p>“RealTimeIsUniversal”=dword:00000001</p></blockquote><h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><h3 id="安装fcitx"><a href="#安装fcitx" class="headerlink" title="安装fcitx"></a>安装fcitx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-googlepinyin</span><br><span class="line">sudo pacman -S fcitx-im</span><br><span class="line">sudo pacman -S fcitx-configtool</span><br><span class="line"></span><br><span class="line"><span class="comment">#在桌面环境配置文件中写入相关设置</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"export GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=@im=fcitx"</span> &gt;&gt; ~/.xprofile</span><br></pre></td></tr></table></figure><p>注销后即可正常使用fcitx</p><blockquote><p>若初始选择安装的英文系统，再安装fcitx可能会使得fcitx中的中文输入法不能正常调用，此时应修改本地化设定中的语言</p></blockquote><h3 id="安装yay"><a href="#安装yay" class="headerlink" title="安装yay"></a>安装yay</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo panman -S yay</span><br></pre></td></tr></table></figure><p>由于<code>yaourt</code>目前已停止开发，存在安全问题，故选择<code>yay</code>进行包管理</p><h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S wps-office nutstore typora sublime-text-imfix visual-studio-code-bin</span><br></pre></td></tr></table></figure><h2 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h2><h3 id="字体配置"><a href="#字体配置" class="headerlink" title="字体配置"></a>字体配置</h3><p><code>XFCE</code>桌面默认的字体配置在<code>外观</code>中设置。默认字体为<code>Noto Sans Regular</code>, 默认等宽字体为<code>Monospace Regular</code>, 已有不错的显示效果。</p><p>字体大小默认为10号字，根据屏幕情况可自行调整至12或14号字。</p><h3 id="自启动配置"><a href="#自启动配置" class="headerlink" title="自启动配置"></a>自启动配置</h3><p>配置文件位于<code>～/.config/autostart/</code>目录下，也可通过<code>会话和启动</code>进行设置。</p><p>参考坚果云写入的自启动方式，可自行将启动项写入为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"(sleep 30 &amp;&amp; nohup /opt/nutstore/bin/nutstore-pydaemon.py &gt;/dev/null 2&gt;&amp;1) &amp;"</span></span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://wenqixiang.com/manjaro-guide/" target="_blank" rel="noopener">https://wenqixiang.com/manjaro-guide/</a></p><p><a href="https://www.lanbu.net/d/52/11" target="_blank" rel="noopener">https://www.lanbu.net/d/52/11</a></p><p><a href="http://blog.sina.com.cn/s/blog_18373c26b0102xo4g.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_18373c26b0102xo4g.html</a></p><p><a href="https://blog.csdn.net/aaazz47/article/details/78696899" target="_blank" rel="noopener">https://blog.csdn.net/aaazz47/article/details/78696899</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;在manjaro上配置工作环境&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sr-c.github.io/tags/linux/"/>
    
      <category term="manjaro" scheme="https://sr-c.github.io/tags/manjaro/"/>
    
      <category term="arch" scheme="https://sr-c.github.io/tags/arch/"/>
    
  </entry>
  
  <entry>
    <title>如何绘制一张热图</title>
    <link href="https://sr-c.github.io/2019/04/30/how-heatmaps-work/"/>
    <id>https://sr-c.github.io/2019/04/30/how-heatmaps-work/</id>
    <published>2019-04-30T03:28:59.000Z</published>
    <updated>2019-06-12T09:50:17.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description">如今，转录组数据展示最为常见的方式就是绘制热图。但是，热图是如何绘制出来的，却常常被人们所忽略。</p><a id="more"></a><p><img src="http://www.frontiersin.org/files/Articles/53165/fgene-04-00153-r4/image_m/fgene-04-00153-g005.jpg" alt="classical-heatmap"></p><p>绘制热图的过程分为两个关键的步骤，第一，将数据聚类；第二，将数值矩阵转化为颜色图像。</p><h2 id="将数据聚类"><a href="#将数据聚类" class="headerlink" title="将数据聚类"></a>将数据聚类</h2><p>聚类的方法有许多，其中最简单的方法就是分层聚集聚类(hierarchical, agglomerative cluster analysis). </p><p>简单来说，该方法会首先计算矩阵中所有数据点之间的相互距离，然后将相聚最近的数据点连接起来，然后连接距离第二近的数据点，重复直至所有数据点都被聚类。我们得到的聚类树就是这一过程的展示。</p><p>聚类过程中，有时需要将不同的类再次聚类，这个过程也有许多不同的方法，但是最常用的方式是计算两个类中所有点之间的平均距离。</p><h2 id="计算距离"><a href="#计算距离" class="headerlink" title="计算距离"></a>计算距离</h2><p>距离代表着两个数据点之间的差异。这与相似性测量是正交的（相互独立的）。</p><p>距离是如何计算的呢？在<code>R</code>的<code>heatmap()</code>或<code>heatmap.2()</code>函数的默认方法是使用<code>dist()</code>函数。<code>dist()</code>函数的默认方式是欧几里得距离。这一方法测量的是数据向量之间的绝对距离，但是却与其表达模式( the “shape” of the “curve”)无关。</p><p>例如，测定4个基因在8个时间点的表达量。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">h1 &lt;- c(<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line">h2 &lt;- c(<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>,<span class="number">20</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">l1 &lt;- c(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>)</span><br><span class="line">l2 &lt;- c(<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">mat &lt;- rbind(h1,h2,l1,l2)</span><br><span class="line"></span><br><span class="line">par(mar=c(<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line">plot(<span class="number">1</span>:<span class="number">8</span>,rep(<span class="number">0</span>,<span class="number">8</span>), ylim=c(<span class="number">0</span>,<span class="number">35</span>), pch=<span class="string">""</span>, xlab=<span class="string">"Time"</span>, ylab=<span class="string">"Gene Expression"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(mat)) &#123;</span><br><span class="line">lines(<span class="number">1</span>:<span class="number">8</span>,mat[i,], lwd=<span class="number">3</span>, col=i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">legend(<span class="number">1</span>,<span class="number">35</span>,rownames(mat), <span class="number">1</span>:<span class="number">4</span>, cex=<span class="number">0.7</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/03/gex.png" alt="gene-expression-example"></p><p>可以看到，图中表达的基因与两个低表达的基因。关键的是，这两对基因的表达模式完全相反。</p><p>如果我们将这个数据置于<code>dist()</code>函数中，可得到这样的距离矩阵</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dist(mat)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">          h1        h2        l1</span><br><span class="line">h2 <span class="number">28.284271</span>                    </span><br><span class="line">l1 <span class="number">38.470768</span> <span class="number">40.496913</span>          </span><br><span class="line">l2 <span class="number">40.496913</span> <span class="number">38.470768</span>  <span class="number">5.656854</span></span><br></pre></td></tr></table></figure><p>距离矩阵中最小的值是<code>l1</code>与<code>l2</code>之间的距离(5.65)，因此这两者被聚为一类；然后，次小值是<code>h1</code>与<code>h2</code>之间的距离(28.28)，因此，这两者接下来被聚类；最后，这两个类连接起来。这就产生了一个基于距离矩阵的简单聚类分析。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hc &lt;- hclust(dist(mat))</span><br><span class="line">plot(hc)</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/03/hclust.png" alt="cluster"></p><p>简单的热图（列水平上不聚类，保持时间点的顺序）</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(gplots)</span><br><span class="line">heatmap(mat, Colv=<span class="literal">NA</span>, col=greenred(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/04/heatmap1.png" alt="naive-heatmap"></p><p>聚类过程按照距离进行，l1与l2是最相似的，因此它们被聚为一类；然后，h1与h2被聚类。但是，由于颜色不合适，热图看起来很糟糕。尽管l1与l2被聚为一类，它们的颜色却不是同一个模式；h1与h2也是如此。此外，l1与h1有相同的颜色，尽管它们的表达量相差很大。</p><h2 id="数据缩放-scaling"><a href="#数据缩放-scaling" class="headerlink" title="数据缩放(scaling)"></a>数据缩放(scaling)</h2><p>l2与h2有着相同的颜色，但实际上它们的表达量不同。这是因为它们的表达量被缩放了，然后再转化为热图中的颜色。<code>heatmap()</code>与<code>heatmap.2()</code>中的默认设置都是按照行缩放(scale by row). 数据矩阵按行依次使用<code>scale()</code>函数进行缩放，然后转换为颜色。</p><p>关闭缩放后，我们可以看到热图通过欧几里得距离聚类后的结果。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heatmap(mat, Colv=<span class="literal">NA</span>, col=greenred(<span class="number">10</span>), scale=<span class="string">"none"</span>)</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/04/heatmap2.png" alt="no-scale"></p><p>这样看起来结果好了一些，但是还不完善。<code>l1</code>与<code>l2</code>都是绿色，而<code>h1</code>与<code>h2</code>都是红色/黑色。</p><p>一般来说，热图中的绿色代表较低的数值；红色代表较高的数值；黑色则代表中间值。在不进行缩放的时候，<code>l1</code>与<code>l2</code>都是较低的值，因此，它们是绿色；<code>h1</code>与<code>h2</code>中的较大值是较高的值，因此为红色；其中较低的值则是中间值，因此为黑色。</p><h2 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h2><p>通常情况下，我们系统将有相近表达模式的基因聚类在一起。而有些基因的表达量高，有些基因的表达量低。将所有高表达的基因标为红色，低表达的基因表为绿色，而不考虑随时间表达模式的变化。有些时候，我们希望这样，但更多时候，我们系统将相同表达模式的基因聚类在一起。</p><p>因此，<code>heatmap()</code>和<code>heatmap.2()</code>的默认参数结果对我们不可用。它们默认都缩放了数据，这在所有数据点都有着相近表达模式时很有用，但是它们还是用了欧几里得距离，这在我们系统通过表达模式聚类时并不适用。</p><p>我们知道h1与l1有相近的表达模式(similar shape)，h2与l2也有相近的表达模式。但是，<code>dist()</code>函数只考虑绝对距离，并不考虑其表达模式。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>使用另一种距离计算方式，相似性计算，皮尔逊相关系数(<a href="https://en.wikipedia.org/wiki/Pearson_correlation_coefficient" target="_blank" rel="noopener">the pearson correlation co-efficient</a>)。简单来说，它产生一个在-1到1之间的值；1代表两者相同；-1则表达两者正好相对。</p><p>其计算结果如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cor(t(mat))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   h1 h2 l1 l2</span><br><span class="line">h1  <span class="number">1</span> -<span class="number">1</span>  <span class="number">1</span> -<span class="number">1</span></span><br><span class="line">h2 -<span class="number">1</span>  <span class="number">1</span> -<span class="number">1</span>  <span class="number">1</span></span><br><span class="line">l1  <span class="number">1</span> -<span class="number">1</span>  <span class="number">1</span> -<span class="number">1</span></span><br><span class="line">l2 -<span class="number">1</span>  <span class="number">1</span> -<span class="number">1</span>  <span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果中，h1与h2的相关系数为-1, 因此它们非常不相似，而h1与l1，h2与l2则完全正相关。</p><p>在聚类过程中，我们需要的时距离矩阵，不是相似性矩阵。因此，我们需要用1减去相似性，转换得到：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> - cor(t(mat))</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   h1 h2 l1 l2</span><br><span class="line">h1  <span class="number">0</span>  <span class="number">2</span>  <span class="number">0</span>  <span class="number">2</span></span><br><span class="line">h2  <span class="number">2</span>  <span class="number">0</span>  <span class="number">2</span>  <span class="number">0</span></span><br><span class="line">l1  <span class="number">0</span>  <span class="number">2</span>  <span class="number">0</span>  <span class="number">2</span></span><br><span class="line">l2  <span class="number">2</span>  <span class="number">0</span>  <span class="number">2</span>  <span class="number">0</span></span><br></pre></td></tr></table></figure><p>这样h1与l1之间的距离为0；h1与h2之间的距离为2. 那么我们可以得到简单的聚类结果：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hc &lt;- hclust(as.dist(<span class="number">1</span>-cor(t(mat))))</span><br><span class="line">plot(hc)</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/03/hclust_corr.png" alt="similar-cluster"></p><p>简单的热图结果</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">heatmap(mat, Rowv=as.dendrogram(hc), Colv=<span class="literal">NA</span>, col=greenred(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p><img src="http://www.opiniomics.org/wp-content/uploads/2015/04/heatmap3.png" alt></p><p>如此，相同表达模式的基因被聚类在一起，也具有相同的颜色。</p><h2 id="热图实例"><a href="#热图实例" class="headerlink" title="热图实例"></a>热图实例</h2><p>来自ARK-Genomic的<a href="http://www.ark-genomics.org/events-online-training/heatmaps-r" target="_blank" rel="noopener">实例</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(gplots)</span><br><span class="line"></span><br><span class="line">read the data <span class="keyword">in</span> from URL</span><br><span class="line">bots &lt;- read.table(url(<span class="string">"http://genome-www.stanford.edu/cellcycle/data/rawdata/combined.txt"</span>), sep=<span class="string">"t"</span>, header=<span class="literal">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get just the alpha data</span></span><br><span class="line">abot &lt;- bots[,c(<span class="number">8</span>:<span class="number">25</span>)]</span><br><span class="line">rownames(abot) &lt;- bots[,<span class="number">1</span>]</span><br><span class="line">abot[<span class="number">1</span>:<span class="number">7</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># get rid of NAs</span></span><br><span class="line">abot[is.na(abot)] &lt;- <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># we need to find a way of reducing the data.</span></span><br><span class="line"><span class="comment"># Sort on max difference and take first 1000</span></span><br><span class="line">min &lt;-apply(abot, <span class="number">1</span>, min)</span><br><span class="line">max &lt;- apply(abot, <span class="number">1</span>, max)</span><br><span class="line">sabot &lt;- abot[order(max - min, decreasing=<span class="literal">TRUE</span>),][<span class="number">1</span>:<span class="number">1000</span>,]</span><br><span class="line"></span><br><span class="line"><span class="comment"># cluster on correlation</span></span><br><span class="line">hc &lt;- hclust(as.dist(<span class="number">1</span> - cor(t(sabot))), method=<span class="string">"average"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># draw a heatmap</span></span><br><span class="line">heatmap(as.matrix(sabot),</span><br><span class="line">Rowv=as.dendrogram(hc),</span><br><span class="line">Colv=<span class="literal">NA</span>,</span><br><span class="line">col=greenred(<span class="number">10</span>),</span><br><span class="line">labRow=<span class="string">""</span>)</span><br></pre></td></tr></table></figure><p><a href="http://www.opiniomics.org/wp-content/uploads/2015/04/heatmap4.png" target="_blank" rel="noopener"><img src="http://www.opiniomics.org/wp-content/uploads/2015/04/heatmap4.png" alt="heatmap4"></a></p><p>因此，热图绘制还是一个比较复杂的可视化过程。</p><h2 id="无量纲化"><a href="#无量纲化" class="headerlink" title="无量纲化"></a>无量纲化</h2><h3 id="极差法"><a href="#极差法" class="headerlink" title="极差法"></a>极差法</h3><blockquote><p>(观测值-最小值)/极差</p></blockquote><p>将数值缩放到0至1之间，又称为<strong>归一化(normalization)</strong></p><h3 id="log函数标准化"><a href="#log函数标准化" class="headerlink" title="log函数标准化"></a>log函数标准化</h3><blockquote><p>log10(X)/log10(MAX)</p></blockquote><p>适用于观测值大于等于1的情况，这也是一种特殊的归一化。</p><h3 id="z-score"><a href="#z-score" class="headerlink" title="z-score"></a>z-score</h3><blockquote><p>(观测值-均值)/标准差</p></blockquote><p>将数值转化为均值为0，方差为1的标准正态分布的形式，又称作<strong>标准化(standrdization)</strong></p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="http://www.opiniomics.org/you-probably-dont-understand-heatmaps/" target="_blank" rel="noopener">http://www.opiniomics.org/you-probably-dont-understand-heatmaps/</a></p><p><a href="https://sebastianraschka.com/Articles/2014_about_feature_scaling.html" target="_blank" rel="noopener">https://sebastianraschka.com/Articles/2014_about_feature_scaling.html</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NjU4ODQ2MQ==&amp;mid=2247485966&amp;idx=1&amp;sn=7c7cfcc79eba37dd377a31dd30e16e3b&amp;chksm=fdf8424cca8fcb5af1d10b141f92ee545d737483b58fd0a08b45ae2802947db4aaf4f3660092" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU4NjU4ODQ2MQ==&amp;mid=2247485966&amp;idx=1&amp;sn=7c7cfcc79eba37dd377a31dd30e16e3b&amp;chksm=fdf8424cca8fcb5af1d10b141f92ee545d737483b58fd0a08b45ae2802947db4aaf4f3660092</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;如今，转录组数据展示最为常见的方式就是绘制热图。但是，热图是如何绘制出来的，却常常被人们所忽略。&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
      <category term="heatmap" scheme="https://sr-c.github.io/tags/heatmap/"/>
    
  </entry>
  
  <entry>
    <title>ggtree-quickstart</title>
    <link href="https://sr-c.github.io/2019/04/21/ggtree-quickstart/"/>
    <id>https://sr-c.github.io/2019/04/21/ggtree-quickstart/</id>
    <published>2019-04-21T15:44:55.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用ggtree绘制系统发育树</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!requireNamespace(<span class="string">"BiocManager"</span>, quietly = <span class="literal">TRUE</span>))</span><br><span class="line">  install.packages(<span class="string">"BiocManager"</span>)</span><br><span class="line">BiocManager::install(<span class="string">"treeio"</span>, version = <span class="string">"3.8"</span>)</span><br><span class="line">BiocManager::install(<span class="string">"ggtree"</span>, version = <span class="string">"3.8"</span>)</span><br></pre></td></tr></table></figure><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>ggtree可以直接文本输入Newick tree</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggtree)</span><br><span class="line">tree_text &lt;- <span class="string">"(((((cow, (whale, dolphin)), (pig2, boar)), camel), fish), seedling);"</span></span><br><span class="line">x &lt;- read.tree(text=tree_text)</span><br></pre></td></tr></table></figure><p>也可使用<code>treeio</code>直接入其他程序的标准输出</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(treeio)</span><br><span class="line">read.r8s()</span><br></pre></td></tr></table></figure><p>注意，<code>read.r8s()</code>一次性读入r8s 标准输出中的3种树，</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://yulab-smu.github.io/treedata-book/" target="_blank" rel="noopener">https://yulab-smu.github.io/treedata-book/</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用ggtree绘制系统发育树&lt;/p&gt;
    
    </summary>
    
    
      <category term="ggtree" scheme="https://sr-c.github.io/tags/ggtree/"/>
    
  </entry>
  
  <entry>
    <title>ggplot的字体设置</title>
    <link href="https://sr-c.github.io/2019/04/19/R-set-font/"/>
    <id>https://sr-c.github.io/2019/04/19/R-set-font/</id>
    <published>2019-04-19T14:32:30.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">ggplot的字体设置</p><a id="more"></a><h2 id="geom-text"><a href="#geom-text" class="headerlink" title="geom_text"></a>geom_text</h2><p><code>geom_text</code>是直接向ggplot对象中添加绘制的文字</p><h2 id="theme"><a href="#theme" class="headerlink" title="theme"></a>theme</h2><p>在<code>theme</code>中以<code>element_text()</code>设置字体</p><blockquote><p>element_text(family = NULL<strong>,</strong> face = NULL<strong>,</strong> colour = NULL<strong>,</strong> size = NULL<strong>,</strong> hjust = NULL<strong>,</strong> vjust = NULL<strong>,</strong> angle = NULL<strong>,</strong> lineheight = NULL)</p></blockquote><p>其中，<code>title</code>设置图表的标题，坐标轴标题以及图例的文本样式。<code>axis.text</code>则对应坐标轴刻度标尺的字体。</p><h2 id="theme-set"><a href="#theme-set" class="headerlink" title="theme_set"></a>theme_set</h2><p>使用<code>theme_set</code>函数可全局设置特定主题中的字体大小</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局设置某个主题的默认字体大小</span></span><br><span class="line">theme_set(theme_gray(base_size = <span class="number">18</span>))</span><br><span class="line">qplot(<span class="number">1</span>:<span class="number">10</span>, <span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 或直接在主题中设置base_size</span></span><br><span class="line">qplot(<span class="number">1</span>:<span class="number">10</span>, <span class="number">1</span>:<span class="number">10</span>) + theme_grey(base_size = <span class="number">18</span>) </span><br><span class="line">ggplot(mtcars, aes(x = mpg, y = cyl)) + </span><br><span class="line">geom_point() +</span><br><span class="line">theme_grey(base_size = <span class="number">18</span>)</span><br></pre></td></tr></table></figure><h2 id="yyplot-set-font"><a href="#yyplot-set-font" class="headerlink" title="yyplot::set_font"></a>yyplot::set_font</h2><p>使用Y叔提供<code>yyplot</code>中提供的<a href="https://guangchuangyu.github.io/cn/2017/09/ggplot2-set-font/" target="_blank" rel="noopener"><code>set_font</code></a>函数可以在最后同一设置文字。（对于<code>geom_text</code>, 或<code>theme</code>中的<code>axis.text</code>, <code>text</code>均生效）</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://www.cnblogs.com/wkslearner/p/5701207.html" target="_blank" rel="noopener">https://www.cnblogs.com/wkslearner/p/5701207.html</a></p><p><a href="https://stackoverflow.com/questions/25061822/ggplot-geom-text-font-size-control" target="_blank" rel="noopener">https://stackoverflow.com/questions/25061822/ggplot-geom-text-font-size-control</a></p><p><a href="https://cloud.tencent.com/developer/ask/65053" target="_blank" rel="noopener">https://cloud.tencent.com/developer/ask/65053</a></p><p><a href="https://guangchuangyu.github.io/cn/2017/09/ggplot2-set-font/" target="_blank" rel="noopener">https://guangchuangyu.github.io/cn/2017/09/ggplot2-set-font/</a></p><p><a href="https://cran.r-project.org/web/packages/svglite/vignettes/fonts.html" target="_blank" rel="noopener">https://cran.r-project.org/web/packages/svglite/vignettes/fonts.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;ggplot的字体设置&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
      <category term="ggplot" scheme="https://sr-c.github.io/tags/ggplot/"/>
    
      <category term="font" scheme="https://sr-c.github.io/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>【debug】EOF within quoted string</title>
    <link href="https://sr-c.github.io/2019/03/31/debug-EOF-within-quoted-string/"/>
    <id>https://sr-c.github.io/2019/03/31/debug-EOF-within-quoted-string/</id>
    <published>2019-03-31T14:26:54.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用R读入数据时发生怪异错误</p><a id="more"></a><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在R中读入外部数据时，得到warning</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning message:</span><br><span class="line">In scan(file, what, nmax, sep, dec, quote, skip, nlines, na.strings,  :</span><br><span class="line">  EOF within quoted string</span><br></pre></td></tr></table></figure><p>这可能是由于数据表格中存在引号<code>&quot;</code>或<code>&#39;</code>, 而默认设置读入数据的<code>read.table()</code>函数的<code>quote =&quot;\&quot;&#39;&quot;</code></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在读入数据时，通过<code>quote = &quot;&quot;</code>禁用引用</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cit &lt;- read.csv(<span class="string">"citations.CSV"</span>, quote = <span class="string">""</span>, </span><br><span class="line">                 row.names = <span class="literal">NULL</span>, </span><br><span class="line">                 stringsAsFactors = <span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://codeday.me/bug/20170630/34178.html" target="_blank" rel="noopener">https://codeday.me/bug/20170630/34178.html</a></p><p><a href="https://www.rdocumentation.org/packages/utils/versions/3.5.3/topics/read.table" target="_blank" rel="noopener">https://www.rdocumentation.org/packages/utils/versions/3.5.3/topics/read.table</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用R读入数据时发生怪异错误&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
      <category term="debug" scheme="https://sr-c.github.io/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>使用KinFin进行比较基因组分析</title>
    <link href="https://sr-c.github.io/2019/03/23/KinFin-quickstart/"/>
    <id>https://sr-c.github.io/2019/03/23/KinFin-quickstart/</id>
    <published>2019-03-23T10:31:47.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用KinFin整合下游的比较基因组分析</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/DRL/kinfin.git</span><br><span class="line"><span class="built_in">cd</span> kinfin</span><br><span class="line">./install</span><br></pre></td></tr></table></figure><p>安装程序会下载一些数据，并使用<code>pip</code>安装相应的模块。但若是没有管理员权限，还是使用<code>conda</code>来配置环境比较方便。</p><p>软件的<a href="https://github.com/DRL/kinfin/blob/master/requirements.txt" target="_blank" rel="noopener">环境要求</a><code>python</code>模块如下</p><blockquote><p>scipy==0.19.0<br>matplotlib==2.0.2<br>docopt==0.6.2<br>networkx==1.11<br>powerlaw==1.4.1<br>ete3==3.0.0b35</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">conda create -n kinfin python=2.7</span><br><span class="line"><span class="built_in">source</span> activate kinfin</span><br><span class="line"><span class="comment">#matplotlib 2.0.2 与ete3 3.0.0b35的conda环境依赖存在冲突，故直接尝试安装最新版</span></span><br><span class="line">conda install scipy==0.19.0 matplotlib docopt==0.6.2 networkx==1.11 ete3 </span><br><span class="line"><span class="comment">#powerlaw目前只能从第三方源安装</span></span><br><span class="line">conda install -c mlgill powerlaw </span><br><span class="line"></span><br><span class="line">./kinfin --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>出现帮助信息表明软件安装完成</p><p>此外，还可以安装一些<a href="https://kinfin.readme.io/docs/getting-started#section-additional-useful-software" target="_blank" rel="noopener">其他软件</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">conda install parallel</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">wget https://github.com/gephi/gephi/releases/download/v0.9.2/gephi-0.9.2-linux.tar.gz</span><br><span class="line">tar zxf gephi-0.9.2-linux.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用trimAl截短多序列比对后的序列</span></span><br><span class="line"><span class="comment"># http://trimal.cgenomics.org/downloads</span></span><br><span class="line">wget https://github.com/scapella/trimal/archive/v1.4.1.tar.gz -O trimAl_v1.4.1.tar.gz</span><br><span class="line">tar zxf trimAl_v1.4.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> trimal-1.4.1/<span class="built_in">source</span></span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/PatrickKueck/FASconCAT.git</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>KinFin的软件路径中提供了测试数据<code>./test</code>，但我们还可以使用<a href="https://kinfin.readme.io/docs/running-the-example-dataset" target="_blank" rel="noopener">教程</a>中的数据来练习。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $KINFIN/: path to KinFin installation</span></span><br><span class="line"><span class="comment"># $MAFFT/: path to MAFFT installation</span></span><br><span class="line"><span class="comment"># $TRIMAL/: path to trimal installation</span></span><br><span class="line"><span class="comment"># $FASCONCAT/: path to FASconCAT installation</span></span><br><span class="line"><span class="comment"># $RAXML/: path to RAxML installation</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. Clone KinFin manuscript repo</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/DRL/kinfin_manuscript</span><br><span class="line"><span class="built_in">cd</span> kinfin_manuscript/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Basic analysis</span></span><br><span class="line">tar zxf supplementary_material/supplementary_data_1.tar.gz</span><br><span class="line"><span class="variable">$KINFIN</span>/kinfin \</span><br><span class="line">-g supplementary_data_1/Orthogroups.I1_5.txt \</span><br><span class="line">  -c supplementary_data_1/kinfin.config.basic.txt \</span><br><span class="line">  -s supplementary_data_1/kinfin.SequenceIDs.txt \</span><br><span class="line">  -o kinfin.basic </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 2.1 Get single-copy cluster IDs</span></span><br><span class="line">grep <span class="string">'true'</span> kinfin.basic.kinfin_results/all/all.all.cluster_1to1s.txt | \</span><br><span class="line">cut -f1 &gt; single_copy.cluster_ids.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.2 Get protein IDs from single-copy cluster IDs</span></span><br><span class="line"><span class="variable">$KINFIN</span>/scripts/get_protein_ids_from_cluster.py \</span><br><span class="line">-g supplementary_data_1/Orthogroups.I1_5.txt \</span><br><span class="line">  --cluster_ids single_copy.cluster_ids.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.3 Extract FASTA sequences based on protein IDs</span></span><br><span class="line">tar zxf supplementary_material/supplementary_data_2.tar.gz</span><br><span class="line">cat supplementary_data_2/fastas/*.faa &gt; all.proteins.faa</span><br><span class="line">parallel -j8 <span class="string">'\</span></span><br><span class="line"><span class="string">grep --no-group-separator -A1 -wFf &#123;&#125; all.proteins.faa &gt; &#123;/.&#125;.faa\</span></span><br><span class="line"><span class="string">  '</span> ::: Orthogroups.I1_5.OG*.txt</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 2.4 Align FASTA sequences</span></span><br><span class="line">parallel -j 8 <span class="string">'\</span></span><br><span class="line"><span class="string">$MAFFT/bin/einsi &#123;&#125; &gt; &#123;/.&#125;.einsi.faa'</span> ::: Orthogroup*.faa</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 2.5 Trim alignments</span></span><br><span class="line">parallel -j 8 <span class="string">'\</span></span><br><span class="line"><span class="string">$TRIMAL/source/trimal -in &#123;&#125; -out &#123;/.&#125;.trimal.faa -automated1 \</span></span><br><span class="line"><span class="string">  '</span> ::: *einsi.faa</span><br><span class="line">  </span><br><span class="line"><span class="comment">## ERROR: Alignment not loaded: "Orthogroup.I1_5.OG*.einsi.faa" Check the file's content.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.6 Sanitise headers for FASconCAT</span></span><br><span class="line">parallel -j 8 <span class="string">'\</span></span><br><span class="line"><span class="string">cut -f1 -d"." &#123;&#125; &gt; &#123;/.&#125;.sane.fas \</span></span><br><span class="line"><span class="string">  '</span> ::: *trimal.faa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.7 Concatenate alignments</span></span><br><span class="line"><span class="variable">$FASCONCAT</span>/FASconCAT_v1.11.pl -s -p -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.8 RAxML 注意耗时较长，推荐后台运行</span></span><br><span class="line"><span class="variable">$RAXML</span>/raxmlHPC-PTHREADS-SSE3 -s FcC_smatrix.phy -m PROTGAMMAGTR -T 32 -n ml -N 20 -p 19</span><br><span class="line"><span class="variable">$RAXML</span>/raxmlHPC-PTHREADS-SSE3 -m PROTGAMMAGTR -T 48 -n bs -p 19 -b 19 -<span class="comment"># 100 -s FcC_smatrix.phy</span></span><br><span class="line"><span class="variable">$RAXML</span>/raxmlHPC-PTHREADS-SSE3 -m GTRCAT -p 19 -f b -t RAxML_bestTree.ml -z RAxML_bootstrap.bs -n final</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. Advanced analysis (assuming KinFin executable is in your $PATH)</span></span><br><span class="line"><span class="variable">$KINFIN</span>/kinfin \</span><br><span class="line">-g supplementary_data_2/Orthogroups.I1_5.txt \</span><br><span class="line">  -c supplementary_data_2/kinfin.config.tree.txt \</span><br><span class="line">  -s supplementary_data_2/kinfin.SequenceIDs.txt \</span><br><span class="line">  -o kinfin.advanced \</span><br><span class="line">  -p supplementary_data_2/kinfin.SpeciesIDs.txt \</span><br><span class="line">  -a supplementary_data_2/fastas/ \</span><br><span class="line">  -t supplementary_data_2/kinfin.tree.nwk \</span><br><span class="line">  -f supplementary_data_2/kinfin.functional_annotation.txt</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 4. Infer representative functional annotation (all clusters)</span></span><br><span class="line"><span class="variable">$KINFIN</span>/scripts/filter_functional_annotation_of_clusters.py all \</span><br><span class="line">-f kinfin.advanced.kinfin_results/cluster_metrics_domains.IPR.txt \</span><br><span class="line">  -c kinfin.advanced.kinfin_results/cluster_counts_by_taxon.txt \</span><br><span class="line">  -x 0.75 \</span><br><span class="line">  -p 0.75 \</span><br><span class="line">  -o kinfin.IPR</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. Infer representative functional annotation (synapomorphic clusters)</span></span><br><span class="line"><span class="variable">$KINFIN</span>/scripts/filter_functional_annotation_of_clusters.py synapo \</span><br><span class="line">-f kinfin.advanced.kinfin_results/cluster_metrics_domains.IPR.txt \</span><br><span class="line">  -c kinfin.advanced.kinfin_results/cluster_counts_by_taxon.txt \</span><br><span class="line">  -t kinfin.advanced.kinfin_results/tree/tree.cluster_metrics.txt \</span><br><span class="line">  -n 0.75 \</span><br><span class="line">  -x 0.75 \</span><br><span class="line">  -p 0.75 \</span><br><span class="line">  -o kinfin.IPR</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://kinfin.readme.io/docs/running-the-example-dataset" target="_blank" rel="noopener">https://kinfin.readme.io/docs/running-the-example-dataset</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用KinFin整合下游的比较基因组分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="KinFin" scheme="https://sr-c.github.io/tags/KinFin/"/>
    
  </entry>
  
  <entry>
    <title>LACHESIS安装</title>
    <link href="https://sr-c.github.io/2019/03/19/LACHESIS-install/"/>
    <id>https://sr-c.github.io/2019/03/19/LACHESIS-install/</id>
    <published>2019-03-19T13:12:12.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">LACHESIS的编译安装</p><a id="more"></a><h2 id="系统依赖"><a href="#系统依赖" class="headerlink" title="系统依赖"></a>系统依赖</h2><p><code>LACHESIS</code>的系统依赖有</p><ul><li>gcc, the C++ compiler (<a href="http://gcc.gnu.org/" target="_blank" rel="noopener">http://gcc.gnu.org/</a>)</li><li>The zlib compression library (<a href="http://www.zlib.net/" target="_blank" rel="noopener">http://www.zlib.net/</a>)</li><li>The boost C++ libraries (<a href="http://www.boost.org/" target="_blank" rel="noopener">http://www.boost.org/</a>)</li><li>The SAMtools toolkit for handling SAM/BAM files (<a href="http://samtools.sourceforge.net/" target="_blank" rel="noopener">http://samtools.sourceforge.net/</a>) (make sure to use version 0.1.19 or older)</li></ul><p>其中，<code>boost</code>的版本应该高于<code>1.52.0</code>，低于<code>1.67.0</code>，<code>samtools</code>的版本不高于<code>0.1.19</code></p><p>此外，LACHESIS需要系统的堆栈大小最小为10 MB. 可使用<code>ulimit -s</code>查看，若小于10240，可使用<code>ulimit -s 10240</code>设定。</p><h3 id="编译安装boost"><a href="#编译安装boost" class="headerlink" title="编译安装boost"></a>编译安装boost</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar zxf boost_1_53_0.tar.gz</span><br><span class="line">./bootstrap.sh --with-libraries=all --with-toolset=gcc</span><br><span class="line">./b2 toolset=gcc <span class="comment">#此步骤过程较长</span></span><br><span class="line">./b2 install --prefix=/path/to/istall/boost_1_53_0</span><br><span class="line">./bjam install --prefix=/path/to/istall/boost_1_53_0</span><br></pre></td></tr></table></figure><p>此过程中会得到许多failed，error如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...failed gcc.compile.c++ bin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi/cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a(clean) for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;pstage/lib&gt;libboost_wave.a for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a...</span><br><span class="line">...failed updating 88 targets...</span><br><span class="line">...skipped 78 targets...</span><br><span class="line">...updated 802 targets...</span><br><span class="line"></span><br><span class="line">...failed gcc.compile.c++ bin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi/cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a(clean) for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;cpplexer/re2clex/cpp_re.o...</span><br><span class="line">...skipped &lt;p/Storage/data002/shurh/opt/boost_1_53_0/lib&gt;libboost_wave.a for lack of &lt;pbin.v2/libs/wave/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_wave.a...</span><br><span class="line">...failed updating 88 targets...</span><br><span class="line">...skipped 78 targets...</span><br><span class="line">...updated 10108 targets...</span><br></pre></td></tr></table></figure><h3 id="编译安装samtools"><a href="#编译安装samtools" class="headerlink" title="编译安装samtools"></a>编译安装samtools</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Makefile</span><br></pre></td></tr></table></figure><h3 id="编译LACHESIS"><a href="#编译LACHESIS" class="headerlink" title="编译LACHESIS"></a>编译LACHESIS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LACHESIS_BOOST_DIR=/path/to/boost_1_53_0</span><br><span class="line"><span class="built_in">export</span> LACHESIS_SAMTOOLS_DIR=/path/to/samtools-0.1.19</span><br><span class="line">./configure --with-samtools=/path/to/samtools-0.1.19 --with-boost=/path/to/boost_1_53_0/</span><br></pre></td></tr></table></figure><p>报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">checking <span class="keyword">for</span> Boost headers version &gt;= 1.52.0... /Storage/data002/shurh/opt/boost_1_53_0//include</span><br><span class="line">checking <span class="keyword">for</span> Boost<span class="string">'s header version... 1_53</span></span><br><span class="line"><span class="string">checking for the toolset name used by Boost for g++... configure: WARNING: could not figure out which toolset name to use for g++</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">checking boost/system/error_code.hpp usability... yes</span></span><br><span class="line"><span class="string">checking boost/system/error_code.hpp presence... yes</span></span><br><span class="line"><span class="string">checking for boost/system/error_code.hpp... yes</span></span><br><span class="line"><span class="string">checking for the Boost system library... no</span></span><br><span class="line"><span class="string">configure: error: cannot find the flags to link with Boost system</span></span><br></pre></td></tr></table></figure><p>提示boost缺少system库文件，查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ ls ~/opt/boost_1_53_0/lib/</span><br><span class="line">libboost_chrono.a             libboost_math_c99f.so.1.53.0  libboost_prg_exec_monitor.a</span><br><span class="line">libboost_context.a            libboost_math_c99l.a          libboost_prg_exec_monitor.so</span><br><span class="line">libboost_context.so           libboost_math_c99l.so         libboost_prg_exec_monitor.so.1.53.0</span><br><span class="line">libboost_context.so.1.53.0    libboost_math_c99l.so.1.53.0  libboost_python.a</span><br><span class="line">libboost_date_time.a          libboost_math_c99.so          libboost_python.so</span><br><span class="line">libboost_date_time.so         libboost_math_c99.so.1.53.0   libboost_python.so.1.53.0</span><br><span class="line">libboost_date_time.so.1.53.0  libboost_math_tr1.a           libboost_random.a</span><br><span class="line">libboost_exception.a          libboost_math_tr1f.a          libboost_random.so</span><br><span class="line">libboost_graph.a              libboost_math_tr1f.so         libboost_random.so.1.53.0</span><br><span class="line">libboost_iostreams.a          libboost_math_tr1f.so.1.53.0  libboost_signals.a</span><br><span class="line">libboost_iostreams.so         libboost_math_tr1l.a          libboost_signals.so</span><br><span class="line">libboost_iostreams.so.1.53.0  libboost_math_tr1l.so         libboost_signals.so.1.53.0</span><br><span class="line">libboost_math_c99.a           libboost_math_tr1l.so.1.53.0  libboost_timer.a</span><br><span class="line">libboost_math_c99f.a          libboost_math_tr1.so</span><br><span class="line">libboost_math_c99f.so         libboost_math_tr1.so.1.53.0</span><br></pre></td></tr></table></figure><p>确实缺少<code>libboost_system.so</code>, 而这在<code>./bjam install</code>过程中的报错信息中存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...failed gcc.compile.c++ bin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi/error_code.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_system.a(clean) <span class="keyword">for</span> lack of &lt;pbin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi&gt;error_code.o...</span><br><span class="line">...skipped &lt;pbin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_system.a <span class="keyword">for</span> lack of &lt;pbin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi&gt;error_code.o...</span><br><span class="line">...skipped &lt;p/usr/<span class="built_in">local</span>/lib&gt;libboost_system.a <span class="keyword">for</span> lack of &lt;pbin.v2/libs/system/build/gcc-7.3.0/release/link-static/threading-multi&gt;libboost_system.a...</span><br></pre></td></tr></table></figure><p>说明在编译过程中，<code>libboost_system</code>由于某些错误被滤过了，没有被编译。</p><h2 id="自行使用conda配置boost环境"><a href="#自行使用conda配置boost环境" class="headerlink" title="自行使用conda配置boost环境"></a>自行使用conda配置boost环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conda create -n LACHESIS python=2.7</span><br><span class="line"><span class="built_in">source</span> activate LACHESIS</span><br><span class="line">conda install boost=1.57 -y</span><br><span class="line"><span class="built_in">export</span> LACHESIS_BOOST_DIR=/path/miniconda/envs/LACHESIS</span><br><span class="line"><span class="built_in">export</span> LACHESIS_SAMTOOLS_DIR=/path/to/samtools-0.1.19</span><br><span class="line">./configure --with-samtools=/path/to/samtools-0.1.19 --with-boost=/path/to/boost_1_53_0/</span><br></pre></td></tr></table></figure><p>Boost system library通过，但得到后续报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">checking <span class="keyword">for</span> boost/program_options.hpp... yes</span><br><span class="line">checking <span class="keyword">for</span> the Boost program_options library... no</span><br><span class="line">configure: error: cannot find the flags to link with Boost program_options</span><br></pre></td></tr></table></figure><p>但是<code>/path/miniconda/envs/LACHESIS/lib</code>中是存在<code>libboost_program_options.so</code>的</p><p>查看<code>./configure</code>中的<code>deflate</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">for ac_header in zlib.h</span><br><span class="line">do :</span><br><span class="line">  ac_fn_cxx_check_header_mongrel &quot;$LINENO&quot; &quot;zlib.h&quot; &quot;ac_cv_header_zlib_h&quot; &quot;$ac_include</span><br><span class="line">if test &quot;x$ac_cv_header_zlib_h&quot; = xyes; then :</span><br><span class="line">  cat &gt;&gt;confdefs.h &lt;&lt;_ACEOF</span><br><span class="line">#define HAVE_ZLIB_H 1</span><br><span class="line">_ACEOF</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">  as_fn_error $? &quot;libz is required.&quot; &quot;$LINENO&quot; 5</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">&#123; $as_echo &quot;$as_me:$&#123;as_lineno-$LINENO&#125;: checking for library containing deflate&quot; &gt;&amp;5</span><br><span class="line">$as_echo_n &quot;checking for library containing deflate... &quot; &gt;&amp;6; &#125;</span><br><span class="line">if $&#123;ac_cv_search_deflate+:&#125; false; then :</span><br><span class="line">  $as_echo_n &quot;(cached) &quot; &gt;&amp;6</span><br><span class="line">else</span><br><span class="line">  ac_func_search_save_LIBS=$LIBS</span><br><span class="line">cat confdefs.h - &lt;&lt;_ACEOF &gt;conftest.$ac_ext</span><br><span class="line">/* end confdefs.h.  */</span><br></pre></td></tr></table></figure><h3 id="zlib错误"><a href="#zlib错误" class="headerlink" title="zlib错误"></a>zlib错误</h3><p><a href="https://daler.github.io/bioconda-docs/troubleshooting.html#zlib-errors" target="_blank" rel="noopener">https://daler.github.io/bioconda-docs/troubleshooting.html#zlib-errors</a></p><p>有时即使已经安装了zlib, 但在编译程序时仍然报错缺少<code>zlib.h</code>, 这常常时因为zlib的位置常常在编译文件中定义了，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> LIBRARY_PATH CPATH C_INCLUDE_PATH PKG_CONFIG_PATH CPLUS_INCLUDE_PATH INCLUDE</span><br></pre></td></tr></table></figure><p>手动修改<code>src/include/gtools</code>文件夹中<code>SAMStepper.h</code>和<code>SAMStepper.cc</code>的samtools头文件</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://github.com/shendurelab/LACHESIS/issues/30#issuecomment-299240018" target="_blank" rel="noopener">https://github.com/shendurelab/LACHESIS/issues/30#issuecomment-299240018</a></p><p><a href="https://github.com/shendurelab/LACHESIS/issues/23" target="_blank" rel="noopener">https://github.com/shendurelab/LACHESIS/issues/23</a></p><p><a href="https://blog.csdn.net/yzf279533105/article/details/77658367" target="_blank" rel="noopener">https://blog.csdn.net/yzf279533105/article/details/77658367</a></p><p><a href="https://daler.github.io/bioconda-docs/troubleshooting.html#zlib-errors" target="_blank" rel="noopener">https://daler.github.io/bioconda-docs/troubleshooting.html#zlib-errors</a></p><p><a href="https://www.tecmint.com/set-unset-environment-variables-in-linux/" target="_blank" rel="noopener">https://www.tecmint.com/set-unset-environment-variables-in-linux/</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;LACHESIS的编译安装&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hi-C" scheme="https://sr-c.github.io/tags/Hi-C/"/>
    
      <category term="LACHESIS" scheme="https://sr-c.github.io/tags/LACHESIS/"/>
    
  </entry>
  
  <entry>
    <title>Windows中R的配置</title>
    <link href="https://sr-c.github.io/2019/03/16/R-setup/"/>
    <id>https://sr-c.github.io/2019/03/16/R-setup/</id>
    <published>2019-03-16T14:53:20.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">在Windows中配置R</p><a id="more"></a><h2 id="用户目录"><a href="#用户目录" class="headerlink" title="用户目录"></a>用户目录</h2><p>R的用户目录在Windows系统下默认位于当前用户的Documents文件夹</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; normalizePath(<span class="string">'~'</span>)</span><br><span class="line">[<span class="number">1</span>] <span class="string">"C:\\Users\\yourUserName\\Documents"</span></span><br></pre></td></tr></table></figure><blockquote><p>注意，若你使用了Onedrive，并且将文档文件夹加入了自动保护，那么当前用户的Documents文件夹将会被导向至OneDrive文件夹，导致莫名其妙的错误。<a href="https://support.office.com/zh-cn/article/%E4%B8%8E-onedrive-%E5%90%8C%E6%AD%A5-%E6%96%87%E6%A1%A3-%E3%80%81-%E5%9B%BE%E7%89%87-%E5%92%8C-%E6%A1%8C%E9%9D%A2-%E6%96%87%E4%BB%B6%E5%A4%B9-d61a7930-a6fb-4b95-b28a-6552e77c3057" target="_blank" rel="noopener">建议将该功能关闭</a>。</p></blockquote><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h3 id="Renviron"><a href="#Renviron" class="headerlink" title=".Renviron"></a><code>.Renviron</code></h3><p>该文件设置R自身的一些环境变量，仅对R有效，不改变操作系统的设置。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file.edit(<span class="string">'~/.Renviron'</span>)</span><br></pre></td></tr></table></figure><p>推荐在此设置<code>R_LIBS_USER</code>，指定R的附加包安装目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R_LIBS_USER=&quot;~/R&quot;</span><br></pre></td></tr></table></figure><p>若该目录不存在，需要自行手动创建。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir.creat(<span class="string">'~/R'</span>)</span><br></pre></td></tr></table></figure><h3 id="Rprofile"><a href="#Rprofile" class="headerlink" title=".Rprofile"></a><code>.Rprofile</code></h3><p>该文件其实是一个R代码文件，在R启动时，该文件会被首先执行。因此，我们可以将一些个人选项写在其中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file.edit(<span class="string">'~/.Rprofile'</span>)</span><br></pre></td></tr></table></figure><p>使用<code>options()</code>函数设置R运行时的一些选项，如CRAN的镜像地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">options(&quot;repos&quot; = c(CRAN=&quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&quot;,</span><br><span class="line">CRANextra = &quot;http://www.stats.ox.ac.uk/pub/RWin&quot;))</span><br></pre></td></tr></table></figure><h2 id="PATH环境变量"><a href="#PATH环境变量" class="headerlink" title="PATH环境变量"></a><code>PATH</code>环境变量</h2><blockquote><p>“我的电脑”（右键）–&gt;“属性”–&gt;“高级”–&gt;“环境变量”–&gt;“系统变量”–&gt;PATH</p></blockquote><p>其实R在安装的时候，默认会将配置写入注册表</p><h2 id="Rconsole"><a href="#Rconsole" class="headerlink" title="Rconsole"></a><code>Rconsole</code></h2><p>该文件是R在Windows下独有的一个配置文件，可以直接使用文本编辑器编辑。其中配置了Windows下R界面的属性，如界面语言或字体等。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file.path(R.home(<span class="string">'etc'</span>), <span class="string">'Rconsole'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language = en # 修改界面语言为英文</span><br></pre></td></tr></table></figure><h2 id="升级方式"><a href="#升级方式" class="headerlink" title="升级方式"></a>升级方式</h2><p>Windows下R的升级方式很不灵活，官方推荐的<a href="https://cran.r-project.org/bin/windows/base/rw-FAQ.html#What_0027s-the-best-way-to-upgrade_003f" target="_blank" rel="noopener">方式</a>竟然是重新安装，手动复制附加包到新的library文件夹。</p><p>实测我们可以先卸载旧版本的R，卸载程序会保留library文件夹。然后再安装新版本R，手动指定安装目录至原路径。最后再新版本的R中运行</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update.packages(checkBuilt=<span class="literal">TRUE</span>, ask=<span class="literal">FALSE</span>)</span><br></pre></td></tr></table></figure><p>由于之前的配置文件如<code>.Renviron</code>, <code>.Rprofile</code>等存在于用户目录下，升级过程中不受影响。</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://bookdown.org/yihui/r-ninja/setup.html#configure-r" target="_blank" rel="noopener">https://bookdown.org/yihui/r-ninja/setup.html#configure-r</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;在Windows中配置R&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>【StatQuest】置信区间</title>
    <link href="https://sr-c.github.io/2019/03/16/StatQuest-confidence-intervals/"/>
    <id>https://sr-c.github.io/2019/03/16/StatQuest-confidence-intervals/</id>
    <published>2019-03-16T08:54:18.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">置信区间是怎么回事</p><a id="more"></a><h2 id="bootstraping"><a href="#bootstraping" class="headerlink" title="bootstraping"></a>bootstraping</h2><p>通过bootstrap来计算置信区间，帮助我们更好地理解置信区间。</p><p>假设我们需要测量雌性小鼠的体重，对总体抽样12次，测得12个样本。</p><p><strong>Sampling with replacement:</strong> bootstrap的过程就是重复对这12个样本抽样。</p><p>重复这一抽样过程许多次，如10000次，每次都计算抽样后的均值。</p><p>那么95% 置信区间覆盖就是这10000个均值中95%的取值范围。</p><h2 id="Confidence-interval-的意义"><a href="#Confidence-interval-的意义" class="headerlink" title="Confidence interval 的意义"></a>Confidence interval 的意义</h2><p>这是一个可视化的统计值，在置信区间外的取值就相对不可信。</p><p>假设这12个样本均值的置信区间为(21, 31)，那么所有雌鼠体重的“真实”均值小于20 的p-value一定小于0.05，这不太可能。或者说，雌鼠体重的均值与小于20的数值之间存在显著差异。</p><blockquote><p>This is unlikeyly and beacuase fo this, we can say there is a statistically significant difference between the true mean and any value less than 20.</p></blockquote><h2 id="Compare-two-samples"><a href="#Compare-two-samples" class="headerlink" title="Compare two samples"></a>Compare two samples</h2><p>如果两批样本均值的置信区间没有重叠，那么这两组样品之间一定存在显著差异。</p><h3 id="One-Caveat"><a href="#One-Caveat" class="headerlink" title="One Caveat"></a>One Caveat</h3><p>如果两组样本均值的置信区间存在重叠，它们也可能存在显著差异。只是这时，我们必须做t-检验来判定了。</p><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;置信区间是怎么回事&lt;/p&gt;
    
    </summary>
    
    
      <category term="StatQuest" scheme="https://sr-c.github.io/tags/StatQuest/"/>
    
  </entry>
  
  <entry>
    <title>RNA-seq小考核</title>
    <link href="https://sr-c.github.io/2019/03/11/RNA-seq-exercise/"/>
    <id>https://sr-c.github.io/2019/03/11/RNA-seq-exercise/</id>
    <published>2019-03-11T12:54:10.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">生信技能树的single cell RNA-seq小考核</p><a id="more"></a><h3 id="Q1-参考基因组及注释文件下载地址"><a href="#Q1-参考基因组及注释文件下载地址" class="headerlink" title="Q1: 参考基因组及注释文件下载地址"></a>Q1: 参考基因组及注释文件下载地址</h3><p>列出人，小鼠，拟南芥的基因组序列，转录组cDNA序列，基因组注释gtf文件下载地址</p><blockquote><p><strong><a href="http://asia.ensembl.org/Homo_sapiens/Info/Index?db=core" target="_blank" rel="noopener">Human (GRCh38.p12)</a></strong></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.toplevel.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.toplevel.fa.gz</a></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz</a></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz</a></p><p><strong><a href="http://asia.ensembl.org/Mus_musculus/Info/Index?db=core" target="_blank" rel="noopener">Mouse (GRCm38.p6)</a></strong></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.toplevel.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.toplevel.fa.gz</a></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz</a></p><p><a href="ftp://ftp.ensembl.org/pub/release-95/gtf/mus_musculus/Mus_musculus.GRCm38.95.gtf.gz" target="_blank" rel="noopener">ftp://ftp.ensembl.org/pub/release-95/gtf/mus_musculus/Mus_musculus.GRCm38.95.gtf.gz</a></p><p><a href="https://plants.ensembl.org/Arabidopsis_thaliana/Info/Index?db=core" target="_blank" rel="noopener"><strong>Arabidopsis thaliana (TAIR10)</strong></a></p><p><a href="ftp://ftp.ensemblgenomes.org/pub/plants/release-42/fasta/arabidopsis_thaliana/dna/Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensemblgenomes.org/pub/plants/release-42/fasta/arabidopsis_thaliana/dna/Arabidopsis_thaliana.TAIR10.dna.toplevel.fa.gz</a></p><p><a href="ftp://ftp.ensemblgenomes.org/pub/plants/release-42/fasta/arabidopsis_thaliana/cdna/Arabidopsis_thaliana.TAIR10.cdna.all.fa.gz" target="_blank" rel="noopener">ftp://ftp.ensemblgenomes.org/pub/plants/release-42/fasta/arabidopsis_thaliana/cdna/Arabidopsis_thaliana.TAIR10.cdna.all.fa.gz</a></p><p><a href="ftp://ftp.ensemblgenomes.org/pub/plants/release-42/gtf/arabidopsis_thaliana/Arabidopsis_thaliana.TAIR10.42.gtf.gz" target="_blank" rel="noopener">ftp://ftp.ensemblgenomes.org/pub/plants/release-42/gtf/arabidopsis_thaliana/Arabidopsis_thaliana.TAIR10.42.gtf.gz</a></p></blockquote><h3 id="Q2-找到文章的测序数据"><a href="#Q2-找到文章的测序数据" class="headerlink" title="Q2: 找到文章的测序数据"></a>Q2: 找到文章的测序数据</h3><p>2018年12月的NC文章：Spatially and functionally distinct subclasses of breast cancer-associated fibroblasts revealed by single cell RNA sequencing 使用成熟的单细胞转录组( Smart-seq2 )手段探索了癌相关的成纤维细胞 CAFs的功能和空间异质性。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据Data availability，数据位于GEO, GSE111229</span></span><br></pre></td></tr></table></figure><h3 id="Q3：下载测序数据"><a href="#Q3：下载测序数据" class="headerlink" title="Q3：下载测序数据"></a>Q3：下载测序数据</h3><p>主要是理解GEO链接： GSE111229 和原始测序数据：SRP133642 两个链接</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(GEOquery)</span><br><span class="line">gset = getGEO(<span class="string">'GSE111229'</span>)</span><br><span class="line">exprSet = exprs(gset[[<span class="number">1</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接下载</span></span><br><span class="line">wget -c ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE111nnn/GSE111229/matrix/GSE111229_series_matrix.txt.gz</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat SraAccList.txt`; <span class="keyword">do</span> prefetch <span class="variable">$i</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;生信技能树的single cell RNA-seq小考核&lt;/p&gt;
    
    </summary>
    
    
      <category term="生信技能树" scheme="https://sr-c.github.io/tags/%E7%94%9F%E4%BF%A1%E6%8A%80%E8%83%BD%E6%A0%91/"/>
    
      <category term="biotrainee" scheme="https://sr-c.github.io/tags/biotrainee/"/>
    
      <category term="RNA-seq" scheme="https://sr-c.github.io/tags/RNA-seq/"/>
    
  </entry>
  
  <entry>
    <title>linux练习题</title>
    <link href="https://sr-c.github.io/2019/03/11/linux-exercise/"/>
    <id>https://sr-c.github.io/2019/03/11/linux-exercise/</id>
    <published>2019-03-11T12:48:07.000Z</published>
    <updated>2019-06-12T09:50:17.298Z</updated>
    
    <content type="html"><![CDATA[<p class="description">生信技能树的linux练习题</p><a id="more"></a><p><a href="http://www.bio-info-trainee.com/2900.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/2900.html</a></p><ol><li><p>在任意文件夹下面创建形如 1/2/3/4/5/6/7/8/9 格式的文件夹系列。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p 1/2/3/4/5/6/7/8/9</span><br></pre></td></tr></table></figure></li><li><p>在创建好的文件夹下面，比如我的是 /Users/jimmy/tmp/1/2/3/4/5/6/7/8/9 ，里面创建文本文件 me.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch me.txt</span><br></pre></td></tr></table></figure></li><li><p>在文本文件 me.txt 里面输入内容:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; me.txt</span><br><span class="line">Go to: http://www.biotrainee.com/</span><br><span class="line">I love bioinfomatics.</span><br><span class="line">And you ?</span><br><span class="line"><span class="comment">#Ctrl + D</span></span><br></pre></td></tr></table></figure></li><li><p>删除上面创建的文件夹 1/2/3/4/5/6/7/8/9 及文本文件 me.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/tmp/</span><br><span class="line">rm -rf tmp/</span><br></pre></td></tr></table></figure></li><li><p>在任意文件夹下面创建 folder1<del>5这5个文件夹，然后每个文件夹下面继续创建 folder1</del>5这5个文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line">mkdir -p folder<span class="variable">$&#123;m&#125;</span>/folder<span class="variable">$&#123;n&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>在第五题创建的每一个文件夹下面都 创建第二题文本文件 me.txt ，内容也要一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; me.txt</span><br><span class="line">Go to: http://www.biotrainee.com/</span><br><span class="line">I love bioinfomatics.</span><br><span class="line">And you ?</span><br><span class="line"><span class="comment">#Ctrl + D</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> &#123;1..5&#125;; <span class="keyword">do</span></span><br><span class="line">cp me.txt folder<span class="variable">$&#123;m&#125;</span>/folder<span class="variable">$&#123;n&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li><p>再次删除掉前面几个步骤建立的文件夹及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/temp</span><br></pre></td></tr></table></figure></li><li><p>下载 <a href="http://www.biotrainee.com/jmzeng/igv/test.bed" target="_blank" rel="noopener">http://www.biotrainee.com/jmzeng/igv/test.bed</a> 文件，后在里面选择含有 H3K4me3 的那一行是第几行，该文件总共有几行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.biotrainee.com/jmzeng/igv/test.bed</span><br><span class="line"><span class="comment"># 结果为第8行</span></span><br><span class="line">grep -n H3K4me3 test.bed</span><br><span class="line"><span class="comment"># 结果为10行</span></span><br><span class="line">wc -l test.bed</span><br></pre></td></tr></table></figure></li><li><p>下载 <a href="http://www.biotrainee.com/jmzeng/rmDuplicate.zip" target="_blank" rel="noopener">http://www.biotrainee.com/jmzeng/rmDuplicate.zip</a> 文件，并且解压，查看里面的文件夹结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.biotrainee.com/jmzeng/rmDuplicate.zip</span><br><span class="line">unzip rmDuplicate.zip</span><br><span class="line">tree rmDuplicate</span><br></pre></td></tr></table></figure></li><li><p>打开第九题解压的文件，进入 rmDuplicate/samtools/single 文件夹里面，查看后缀为 .sam 的文件，搞清楚 生物信息学里面的SAM/BAM 定义是什么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> rmDuplicate/samtools/single</span><br><span class="line">less -S tmp.sam</span><br></pre></td></tr></table></figure></li><li><p>安装 samtools 软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/samtools/samtools/releases/download/1.9/samtools-1.9.tar.bz2</span><br><span class="line">tar Jxf samtools-1.9.tar.bz2</span><br></pre></td></tr></table></figure></li><li><p>打开 后缀为BAM 的文件，找到产生该文件的命令。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">samtools view tmp.rmdup.bam | less -S</span><br><span class="line">cat readme.txt</span><br></pre></td></tr></table></figure></li><li><p>上面的后缀为BAM 的文件的第二列，只有 0 和 16 两个数字，用 cut/sort/uniq等命令统计它们的个数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">samtools view tmp.rmdup.bam | cut -f 2 | sort | uniq -c</span><br><span class="line">     16 0</span><br><span class="line">     12 16</span><br></pre></td></tr></table></figure></li><li><p>重新打开 rmDuplicate/samtools/paired 文件夹下面的后缀为BAM 的文件，再次查看第二列，并且统计</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../paired</span><br><span class="line">samtools view tmp.rmdup.bam | cut -f 2| sort | uniq -uc</span><br><span class="line">      7 147</span><br><span class="line">      2 163</span><br><span class="line">      1 323</span><br><span class="line">      1 353</span><br><span class="line">      1 371</span><br><span class="line">      1 387</span><br><span class="line">      1 433</span><br><span class="line">      2 83</span><br><span class="line">      2 97</span><br><span class="line">      8 99</span><br></pre></td></tr></table></figure></li><li><p>下载 <a href="http://www.biotrainee.com/jmzeng/sickle/sickle-results.zip" target="_blank" rel="noopener">http://www.biotrainee.com/jmzeng/sickle/sickle-results.zip</a> 文件，并且解压，查看里面的文件夹结构， 这个文件有2.3M，注意留心下载时间及下载速度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/temp</span><br><span class="line">wget http://www.biotrainee.com/jmzeng/sickle/sickle-results.zip</span><br><span class="line">unzip sickle-results.zip</span><br></pre></td></tr></table></figure></li><li><p>解压 sickle-results/single_tmp_fastqc.zip 文件，并且进入解压后的文件夹，找到 fastqc_data.txt 文件，并且搜索该文本文件以 &gt;&gt;开头的有多少行？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> sickle-results</span><br><span class="line">unzip single_tmp_fastqc.zip</span><br><span class="line">grep -c <span class="string">'&gt;&gt;'</span> fastqc_data.txt</span><br></pre></td></tr></table></figure></li><li><p>下载 <a href="http://www.biotrainee.com/jmzeng/tmp/hg38.tss" target="_blank" rel="noopener">http://www.biotrainee.com/jmzeng/tmp/hg38.tss</a> 文件，去NCBI找到TP53/BRCA1等自己感兴趣的基因对应的 refseq数据库 ID，然后找到它们的hg38.tss 文件的哪一行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.biotrainee.com/jmzeng/tmp/hg38.tss</span><br><span class="line">grep NM_000546 hg38.tss</span><br></pre></td></tr></table></figure></li><li><p>解析hg38.tss 文件，统计每条染色体的基因个数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut -f 2 hg38.tss | sort | uniq -c</span><br></pre></td></tr></table></figure></li><li><p>解析hg38.tss 文件，统计NM和NR开头的熟练，了解NM和NR开头的含义。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cut -f 1 hg38.tss | grep -c <span class="string">'NM'</span></span><br><span class="line">51064</span><br><span class="line"> cut -f 1 hg38.tss | grep -c <span class="string">'NR'</span></span><br><span class="line">15954</span><br><span class="line"><span class="comment"># https://en.wikipedia.org/wiki/RefSeq</span></span><br><span class="line"><span class="comment"># NM, mRNA. NR, ncRNA</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;生信技能树的linux练习题&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://sr-c.github.io/tags/linux/"/>
    
      <category term="生信技能树" scheme="https://sr-c.github.io/tags/%E7%94%9F%E4%BF%A1%E6%8A%80%E8%83%BD%E6%A0%91/"/>
    
      <category term="biotrainee" scheme="https://sr-c.github.io/tags/biotrainee/"/>
    
  </entry>
  
  <entry>
    <title>R语言练习题</title>
    <link href="https://sr-c.github.io/2019/03/11/R-exercise/"/>
    <id>https://sr-c.github.io/2019/03/11/R-exercise/</id>
    <published>2019-03-11T07:52:28.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">生信技能树的R语言练习题</p><a id="more"></a><h2 id="初级"><a href="#初级" class="headerlink" title="初级"></a>初级</h2><p><a href="http://www.bio-info-trainee.com/3793.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/3793.html</a></p><h3 id="1-打开-Rstudio-告诉我它的工作目录。"><a href="#1-打开-Rstudio-告诉我它的工作目录。" class="headerlink" title="1. 打开 Rstudio 告诉我它的工作目录。"></a>1. 打开 Rstudio 告诉我它的工作目录。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getwd()</span><br></pre></td></tr></table></figure><h3 id="2-新建6个向量，基于不同的原子类型。（重点是字符串，数值，逻辑值）"><a href="#2-新建6个向量，基于不同的原子类型。（重点是字符串，数值，逻辑值）" class="headerlink" title="2. 新建6个向量，基于不同的原子类型。（重点是字符串，数值，逻辑值）"></a>2. 新建6个向量，基于不同的原子类型。（重点是字符串，数值，逻辑值）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Character</span></span><br><span class="line">v_char &lt;- c(<span class="string">"www"</span>,<span class="string">"biotrainee"</span>,<span class="string">"com"</span>)</span><br><span class="line"><span class="comment"># Numeric</span></span><br><span class="line">v_num &lt;- seq(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line"><span class="comment"># Logical</span></span><br><span class="line">v_logical &lt;- c(<span class="literal">TRUE</span>, <span class="literal">FALSE</span>, <span class="literal">FALSE</span>)</span><br><span class="line"><span class="comment"># Interger</span></span><br><span class="line">v_inter &lt;- <span class="number">2L</span></span><br><span class="line"><span class="comment"># Complex</span></span><br><span class="line">v_complex &lt;- <span class="number">2</span>+<span class="number">5i</span></span><br><span class="line"><span class="comment"># Raw</span></span><br><span class="line">v_raw &lt;- charToRaw(<span class="string">"Hello"</span>)</span><br></pre></td></tr></table></figure><h3 id="3-告诉我-getwd-返回的是什么？"><a href="#3-告诉我-getwd-返回的是什么？" class="headerlink" title="3. 告诉我 getwd() 返回的是什么？"></a>3. 告诉我 getwd() 返回的是什么？</h3><blockquote><p>当前工作目录</p></blockquote><h3 id="4-新建5个其它数据结构，矩阵，数组，数据框，列表，因子（重点是数据框，矩阵）"><a href="#4-新建5个其它数据结构，矩阵，数组，数据框，列表，因子（重点是数据框，矩阵）" class="headerlink" title="4. 新建5个其它数据结构，矩阵，数组，数据框，列表，因子（重点是数据框，矩阵）"></a>4. 新建5个其它数据结构，矩阵，数组，数据框，列表，因子（重点是数据框，矩阵）</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Matrix</span></span><br><span class="line">matrix1 &lt;- matrix(seq(<span class="number">1</span>,<span class="number">10</span>), nrow = <span class="number">2</span>, ncol = <span class="number">5</span>, byrow = <span class="literal">TRUE</span>)</span><br><span class="line"><span class="comment"># Array</span></span><br><span class="line">array1 &lt;- array(c(<span class="number">1</span>,<span class="number">0</span>), dim = c(<span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>))</span><br><span class="line"><span class="comment"># data frame</span></span><br><span class="line">data_frame1 &lt;- data.frame(</span><br><span class="line">    gender = c(<span class="string">"male"</span>, <span class="string">"female"</span>, <span class="string">"male"</span>),</span><br><span class="line">    height = c(<span class="number">130</span>, <span class="number">142</span>, <span class="number">137</span>),</span><br><span class="line">    age = c(<span class="number">7</span>, <span class="number">6</span>, <span class="number">6</span>)</span><br><span class="line">    )</span><br><span class="line"><span class="comment"># List</span></span><br><span class="line">list1 &lt;- list(v_char, v_num, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># Factor</span></span><br><span class="line">factor1 &lt;- factor(v_char)</span><br></pre></td></tr></table></figure><h3 id="5-在你新建的数据框进行切片操作，比如首先取第1，3行，-然后取第4，6列"><a href="#5-在你新建的数据框进行切片操作，比如首先取第1，3行，-然后取第4，6列" class="headerlink" title="5. 在你新建的数据框进行切片操作，比如首先取第1，3行， 然后取第4，6列"></a>5. 在你新建的数据框进行切片操作，比如首先取第1，3行， 然后取第4，6列</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data_frame1[,<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">data_frame1[<span class="number">4</span>,<span class="number">6</span>:]</span><br></pre></td></tr></table></figure><h3 id="6-使用data函数来加载R内置数据集-rivers-描述它。并且可以查看更多的R语言内置的数据集："><a href="#6-使用data函数来加载R内置数据集-rivers-描述它。并且可以查看更多的R语言内置的数据集：" class="headerlink" title="6. 使用data函数来加载R内置数据集 rivers 描述它。并且可以查看更多的R语言内置的数据集："></a>6. 使用data函数来加载R内置数据集 rivers 描述它。并且可以查看更多的R语言内置的数据集：</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data(rivers)</span><br></pre></td></tr></table></figure><h3 id="7-下载-https-www-ncbi-nlm-nih-gov-sra-term-SRP133642-里面的-RunInfo-Table-文件读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。"><a href="#7-下载-https-www-ncbi-nlm-nih-gov-sra-term-SRP133642-里面的-RunInfo-Table-文件读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。" class="headerlink" title="7. 下载 https://www.ncbi.nlm.nih.gov/sra?term=SRP133642 里面的 RunInfo Table 文件读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。"></a>7. 下载 <a href="https://www.ncbi.nlm.nih.gov/sra?term=SRP133642" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/sra?term=SRP133642</a> 里面的 RunInfo Table 文件读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a &lt;- read.table(<span class="string">"SraRunTable.txt"</span>, header = <span class="literal">TRUE</span>, sep = <span class="string">'\t'</span>)</span><br><span class="line">str(a)</span><br></pre></td></tr></table></figure><h3 id="8-下载-https-www-ncbi-nlm-nih-gov-geo-query-acc-cgi-acc-GSE111229-里面的样本信息读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。"><a href="#8-下载-https-www-ncbi-nlm-nih-gov-geo-query-acc-cgi-acc-GSE111229-里面的样本信息读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。" class="headerlink" title="8. 下载 https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111229 里面的样本信息读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。"></a>8. 下载 <a href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111229" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111229</a> 里面的样本信息读入到R里面，了解这个数据框，多少列，每一列都是什么属性的元素。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b &lt;- read.table(<span class="string">"GSE111229_series_matrix.txt.gz"</span>, comment.char = <span class="string">'!'</span>, sep = <span class="string">'\t'</span>, header = <span class="literal">TRUE</span>)</span><br><span class="line">str(b)</span><br></pre></td></tr></table></figure><h3 id="9-把两个表关联起来，使用merge函数。"><a href="#9-把两个表关联起来，使用merge函数。" class="headerlink" title="9. 把两个表关联起来，使用merge函数。"></a>9. 把两个表关联起来，使用merge函数。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c &lt;- merge(a, b, by = <span class="string">"Sample_Name"</span>, all.x = <span class="literal">TRUE</span>)</span><br></pre></td></tr></table></figure><h3 id="10-对前面读取的-RunInfo-Table-文件在R里面探索其MBases列，包括-箱线图-boxplot-和五分位数-fivenum-，还有频数图-hist-，以及密度图-density-。"><a href="#10-对前面读取的-RunInfo-Table-文件在R里面探索其MBases列，包括-箱线图-boxplot-和五分位数-fivenum-，还有频数图-hist-，以及密度图-density-。" class="headerlink" title="10. 对前面读取的 RunInfo Table 文件在R里面探索其MBases列，包括 箱线图(boxplot)和五分位数(fivenum)，还有频数图(hist)，以及密度图(density) 。"></a>10. 对前面读取的 RunInfo Table 文件在R里面探索其MBases列，包括 箱线图(boxplot)和五分位数(fivenum)，还有频数图(hist)，以及密度图(density) 。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; boxplot(sra_table$MBases)</span><br><span class="line">&gt; fivenum(sra_table$MBases)</span><br><span class="line">[<span class="number">1</span>]  <span class="number">0</span>  <span class="number">8</span> <span class="number">12</span> <span class="number">16</span> <span class="number">74</span></span><br><span class="line">&gt; hist(sra_table$MBases)</span><br><span class="line">&gt; density(sra_table$MBases)</span><br></pre></td></tr></table></figure><h3 id="11-把前面读取的样本信息表格的样本名字根据下划线分割看第3列元素的统计情况。第三列代表该样本所在的plate"><a href="#11-把前面读取的样本信息表格的样本名字根据下划线分割看第3列元素的统计情况。第三列代表该样本所在的plate" class="headerlink" title="11. 把前面读取的样本信息表格的样本名字根据下划线分割看第3列元素的统计情况。第三列代表该样本所在的plate"></a>11. 把前面读取的样本信息表格的样本名字根据下划线分割看第3列元素的统计情况。第三列代表该样本所在的plate</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plate=unlist(lapply(e[,<span class="number">2</span>],<span class="keyword">function</span>(x)&#123;</span><br><span class="line"> x</span><br><span class="line"> strsplit(x,<span class="string">'_'</span>)[[<span class="number">1</span>]][<span class="number">3</span>]</span><br><span class="line">&#125;))</span><br></pre></td></tr></table></figure><h2 id="中级"><a href="#中级" class="headerlink" title="中级"></a>中级</h2><p><a href="http://www.bio-info-trainee.com/3750.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/3750.html</a></p><h3 id="1-请根据R包org-Hs-eg-db找到下面ensembl-基因ID-对应的基因名-symbol"><a href="#1-请根据R包org-Hs-eg-db找到下面ensembl-基因ID-对应的基因名-symbol" class="headerlink" title="1. 请根据R包org.Hs.eg.db找到下面ensembl 基因ID 对应的基因名(symbol)"></a>1. 请根据R包org.Hs.eg.db找到下面ensembl 基因ID 对应的基因名(symbol)</h3><blockquote><p>ENSG00000000003.13<br>ENSG00000000005.5<br>ENSG00000000419.11<br>ENSG00000000457.12<br>ENSG00000000460.15<br>ENSG00000000938.11</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(org.Hs.eg.db)</span><br><span class="line">g2s=toTable(org.Hs.egSYMBOL)</span><br><span class="line">g2e=toTable(org.Hs.egENSEMBL)</span><br><span class="line">g2s_e &lt;- merge(g2s, g2e, by = <span class="string">'gene_id'</span>, all = <span class="literal">TRUE</span>)</span><br><span class="line">esbID &lt;- c(<span class="string">"ENSG00000000003.13"</span>,</span><br><span class="line">+             <span class="string">"ENSG00000000005.5"</span>,</span><br><span class="line">+             <span class="string">"ENSG00000000419.11"</span>,</span><br><span class="line">+             <span class="string">"ENSG00000000457.12"</span>,</span><br><span class="line">+             <span class="string">"ENSG00000000460.15"</span>,</span><br><span class="line">+             <span class="string">"ENSG00000000938.11"</span>)</span><br><span class="line"><span class="comment"># 使用strsplit处理文本ID，取.前的部分</span></span><br><span class="line">ID6 &lt;- unlist(lapply(esbID, <span class="keyword">function</span>(x)&#123;</span><br><span class="line"> strsplit(x,<span class="string">'.'</span>,fixed = <span class="literal">TRUE</span>)[[<span class="number">1</span>]][<span class="number">1</span>]</span><br><span class="line"> &#125;)</span><br><span class="line">)</span><br><span class="line">ID6 &lt;- data.frame(ensembl_id = ID6)</span><br><span class="line">merge(ID6, g2s_e, by = <span class="string">"ensembl_id"</span>, all.x = <span class="literal">T</span>)</span><br></pre></td></tr></table></figure><h3 id="2-根据R包hgu133a-db找到下面探针对应的基因名-symbol"><a href="#2-根据R包hgu133a-db找到下面探针对应的基因名-symbol" class="headerlink" title="2. 根据R包hgu133a.db找到下面探针对应的基因名(symbol)"></a>2. 根据R包hgu133a.db找到下面探针对应的基因名(symbol)</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rm(list = ls())</span><br><span class="line">options(stringsAsFactors = <span class="literal">F</span>)</span><br><span class="line"><span class="keyword">library</span>(hgu133a.db)</span><br><span class="line">ids=toTable(hgu133aSYMBOL)</span><br><span class="line">pr_id &lt;- read.table(<span class="string">"R_test2.txt"</span>, col.names = c(<span class="string">"probe_id"</span>))</span><br><span class="line">merge(pr_id, ids, by = <span class="string">"probe_id"</span>, all.x = <span class="literal">F</span>)</span><br></pre></td></tr></table></figure><h3 id="3-找到R包CLL内置的数据集的表达矩阵里面的TP53基因的表达量，并且绘制在-progres-stable分组的boxplot图"><a href="#3-找到R包CLL内置的数据集的表达矩阵里面的TP53基因的表达量，并且绘制在-progres-stable分组的boxplot图" class="headerlink" title="3. 找到R包CLL内置的数据集的表达矩阵里面的TP53基因的表达量，并且绘制在 progres.-stable分组的boxplot图"></a>3. 找到R包CLL内置的数据集的表达矩阵里面的TP53基因的表达量，并且绘制在 progres.-stable分组的boxplot图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rm(list = ls())</span><br><span class="line">options(stringsAsFactors = <span class="literal">F</span>)</span><br><span class="line">suppressPackageStartupMessages(<span class="keyword">library</span>(CLL))</span><br><span class="line">data(sCLLex)</span><br><span class="line">exprSet=exprs(sCLLex) </span><br><span class="line"><span class="keyword">library</span>(hgu95av2.db)</span><br><span class="line">columns(hgu95av2.db)</span><br><span class="line">TP53_prob &lt;- select(hgu95av2.db, </span><br><span class="line">       keys = c(<span class="string">"TP53"</span>),</span><br><span class="line">       columns = c(<span class="string">"ALIAS"</span>,<span class="string">"PROBEID"</span>),</span><br><span class="line">       keytype = <span class="string">"ALIAS"</span>)</span><br><span class="line">boxplot(t(exprSet[TP53_prob$PROBEID,]))</span><br><span class="line">boxplot(exprSet[<span class="number">1</span>,]~gourp_list)</span><br></pre></td></tr></table></figure><h3 id="4-找到BRCA1基因在TCGA数据库的乳腺癌数据集-Breast-Invasive-Carcinoma-TCGA-PanCancer-Atlas-的表达情况"><a href="#4-找到BRCA1基因在TCGA数据库的乳腺癌数据集-Breast-Invasive-Carcinoma-TCGA-PanCancer-Atlas-的表达情况" class="headerlink" title="4. 找到BRCA1基因在TCGA数据库的乳腺癌数据集(Breast Invasive Carcinoma (TCGA, PanCancer Atlas))的表达情况"></a>4. 找到BRCA1基因在TCGA数据库的乳腺癌数据集(Breast Invasive Carcinoma (TCGA, PanCancer Atlas))的表达情况</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># http://www.cbioportal.org/index.do</span></span><br><span class="line"><span class="comment"># Select Studies 选项中输入Breast Invasive Carcinoma PanCancer 搜索并选中目标数据集</span></span><br><span class="line"><span class="comment"># Enter Genes 数据框中输入目标基因BRCA1</span></span><br><span class="line"><span class="comment"># 点击Submit Query提交搜索请求</span></span><br><span class="line"><span class="comment"># 结果页面中，Plots选项卡选择合适数据进行绘图，或下载数据</span></span><br></pre></td></tr></table></figure><h3 id="5-找到TP53基因在TCGA数据库的乳腺癌数据集的表达量分组看其是否影响生存"><a href="#5-找到TP53基因在TCGA数据库的乳腺癌数据集的表达量分组看其是否影响生存" class="headerlink" title="5. 找到TP53基因在TCGA数据库的乳腺癌数据集的表达量分组看其是否影响生存"></a>5. 找到TP53基因在TCGA数据库的乳腺癌数据集的表达量分组看其是否影响生存</h3><blockquote><p><a href="http://www.oncolnc.org/kaplan/?lower=50&amp;upper=50&amp;cancer=BRCA&amp;gene_id=7157&amp;raw=TP53&amp;species=mRNA" target="_blank" rel="noopener">http://www.oncolnc.org/kaplan/?lower=50&amp;upper=50&amp;cancer=BRCA&amp;gene_id=7157&amp;raw=TP53&amp;species=mRNA</a></p></blockquote><h3 id="6-下载数据集GSE17215的表达矩阵并且提取下面的基因画热图"><a href="#6-下载数据集GSE17215的表达矩阵并且提取下面的基因画热图" class="headerlink" title="6. 下载数据集GSE17215的表达矩阵并且提取下面的基因画热图"></a>6. 下载数据集GSE17215的表达矩阵并且提取下面的基因画热图</h3><blockquote><p>ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载链接ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE17nnn/GSE17215/matrix/GSE17215_series_matrix.txt.gz</span></span><br><span class="line"><span class="keyword">library</span>(hthgu133a.db)</span><br><span class="line">expMa &lt;- read.table(<span class="string">"zhong6/GSE17215_series_matrix.txt.gz"</span>,</span><br><span class="line">                    comment.char = <span class="string">"!"</span>,</span><br><span class="line">                    sep = <span class="string">"\t"</span>,</span><br><span class="line">                    header = <span class="literal">TRUE</span>,</span><br><span class="line">                    row.names = <span class="string">"ID_REF"</span>)</span><br><span class="line">ALIAS &lt;- <span class="string">"ACTR3B ANLN BAG1 BCL2 BIRC5 BLVRA CCNB1 CCNE1 CDC20 CDC6 CDCA1 CDH3 CENPF CEP55 CXXC5 EGFR ERBB2 ESR1 EXO1 FGFR4 FOXA1 FOXC1 GPR160 GRB7 KIF2C KNTC2 KRT14 KRT17 KRT5 MAPT MDM2 MELK MIA MKI67 MLPH MMP11 MYBL2 MYC NAT1 ORC6L PGR PHGDH PTTG1 RRM2 SFRP1 SLC39A6 TMEM45B TYMS UBE2C UBE2T"</span></span><br><span class="line">ALIAS_id &lt;- strsplit(ALIAS, split = <span class="string">" "</span>)[[<span class="number">1</span>]]</span><br><span class="line">probe_id &lt;- select(hthgu133a.db, </span><br><span class="line">                    keys = ALIAS_id,</span><br><span class="line">                    columns = c(<span class="string">"ALIAS"</span>,<span class="string">"PROBEID"</span>),</span><br><span class="line">                    keytype = <span class="string">"ALIAS"</span>)</span><br><span class="line">names(probe_id) &lt;- c(<span class="string">"ALIAS"</span>,<span class="string">"ID_REF"</span>)</span><br><span class="line">exprSet &lt;- merge(probe_id, expMa, by = <span class="string">"ID_REF"</span>)[,-<span class="number">2</span>]</span><br><span class="line">row.names(exprSet) &lt;- exprSet$ID_REF</span><br><span class="line">exprSet &lt;- exprSet[,-<span class="number">1</span>]</span><br><span class="line">exprSet &lt;- log(edgeR::cpm(exprSet) + <span class="number">1</span>)</span><br><span class="line">pheatmap::pheatmap(log(exprSet + <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h3 id="7-下载数据集GSE24673的表达矩阵计算样本的相关性并且绘制热图，需要标记上样本分组信息"><a href="#7-下载数据集GSE24673的表达矩阵计算样本的相关性并且绘制热图，需要标记上样本分组信息" class="headerlink" title="7. 下载数据集GSE24673的表达矩阵计算样本的相关性并且绘制热图，需要标记上样本分组信息"></a>7. 下载数据集GSE24673的表达矩阵计算样本的相关性并且绘制热图，需要标记上样本分组信息</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">expMa &lt;- read.table(<span class="string">"zhong7/GSE24673_series_matrix.txt.gz"</span>,</span><br><span class="line">                    comment.char = <span class="string">"!"</span>,</span><br><span class="line">                    sep = <span class="string">"\t"</span>,</span><br><span class="line">                    header = <span class="literal">TRUE</span>,</span><br><span class="line">                    row.names = <span class="string">"ID_REF"</span>)</span><br><span class="line">dim(expMa)</span><br><span class="line">group_list &lt;- factor(c(rep(<span class="string">"RB_139_09"</span>,<span class="number">3</span>),rep(<span class="string">"RB_535_09"</span>,<span class="number">3</span>), rep(<span class="string">"RB_984_09"</span>,<span class="number">3</span>), rep(<span class="string">"Healthy"</span>, <span class="number">2</span>)))</span><br><span class="line"><span class="comment"># pheatmap</span></span><br><span class="line">choosen_gene &lt;- expMa[names(sort(apply(expMa,<span class="number">1</span>,mad),decreasing = <span class="literal">TRUE</span>))[<span class="number">1</span>:<span class="number">50</span>],]</span><br><span class="line">heatMatrix &lt;- t(scale(t(choosen_gene)))</span><br><span class="line">annotation_col &lt;- data.frame(group_list=group_list)</span><br><span class="line">rownames(annotation_col) &lt;- colnames(choosen_gene)</span><br><span class="line">pheatmap::pheatmap(heatMatrix, annotation_col = annotation_col)</span><br></pre></td></tr></table></figure><h3 id="8-找到-GPL6244-platform-of-Affymetrix-Human-Gene-1-0-ST-Array-对应的R的bioconductor注释包，并且安装它！"><a href="#8-找到-GPL6244-platform-of-Affymetrix-Human-Gene-1-0-ST-Array-对应的R的bioconductor注释包，并且安装它！" class="headerlink" title="8. 找到 GPL6244 platform of Affymetrix Human Gene 1.0 ST Array 对应的R的bioconductor注释包，并且安装它！"></a>8. 找到 GPL6244 platform of Affymetrix Human Gene 1.0 ST Array 对应的R的bioconductor注释包，并且安装它！</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">options(BioC_mirror=<span class="string">"https://mirrors.ustc.edu.cn/bioc/"</span>)</span><br><span class="line">options(<span class="string">"repos"</span> = c(CRAN=<span class="string">"https://mirrors.tuna.tsinghua.edu.cn/CRAN/"</span>))</span><br><span class="line">BiocManager::install(<span class="string">"hugene10sttranscriptcluster.db"</span>, version = <span class="string">"3.8"</span>)</span><br><span class="line"><span class="comment"># 直接根据关键字搜索，第一个结果可能是pd.hugene.1.0.st.v1, 但它并不是GPL6244正确的注释包。</span></span><br><span class="line"><span class="comment"># 关于芯片与注释包的对应关系，参考jimmy同学的文章https://www.jianshu.com/p/f6906ba703a0</span></span><br></pre></td></tr></table></figure><h3 id="9-下载数据集GSE42872的表达矩阵，并且分别挑选出-所有样本的-平均表达量-sd-mad-最大的探针，并且找到它们对应的基因。"><a href="#9-下载数据集GSE42872的表达矩阵，并且分别挑选出-所有样本的-平均表达量-sd-mad-最大的探针，并且找到它们对应的基因。" class="headerlink" title="9. 下载数据集GSE42872的表达矩阵，并且分别挑选出 所有样本的(平均表达量/sd/mad/)最大的探针，并且找到它们对应的基因。"></a>9. 下载数据集GSE42872的表达矩阵，并且分别挑选出 所有样本的(平均表达量/sd/mad/)最大的探针，并且找到它们对应的基因。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(GEOquery)</span><br><span class="line">gset = getGEO(<span class="string">'GSE42872'</span>, GSEMatrix = <span class="literal">TRUE</span>, AnnotGPL = <span class="literal">FALSE</span>, getGPL= <span class="literal">FALSE</span>)</span><br><span class="line">exprSet = exprs(gset[[<span class="number">1</span>]])</span><br><span class="line"><span class="comment"># exprSet &lt;- exprSet[apply(exprSet, 1, function(x) sum(x&gt;1) &gt; 5),]</span></span><br><span class="line"><span class="comment"># exprSet &lt;- log(edgeR::cpm(exprSet) + 1)</span></span><br><span class="line"><span class="comment"># 处理中平均值最大的探针</span></span><br><span class="line">max_mean &lt;- names(sort(apply(exprSet,<span class="number">1</span>, mean), decreasing = <span class="literal">T</span>))[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 处理中sd最大的探针</span></span><br><span class="line">max_sd &lt;- names(sort(apply(exprSet,<span class="number">1</span>, sd), decreasing = <span class="literal">T</span>))[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 处理中mad最大的探针</span></span><br><span class="line">max_mad &lt;- names(sort(apply(exprSet,<span class="number">1</span>, mad), decreasing = <span class="literal">T</span>))[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># 查询探针ID对应基因的symbol</span></span><br><span class="line"><span class="keyword">library</span>(hugene10sttranscriptcluster.db)</span><br><span class="line">select(hugene10sttranscriptcluster.db,</span><br><span class="line">       keys = c(max_mean, max_sd, max_mad),</span><br><span class="line">       columns = c(<span class="string">"SYMBOL"</span>),</span><br><span class="line">       keytype = <span class="string">"PROBEID"</span>)</span><br></pre></td></tr></table></figure><h3 id="10-下载数据集GSE42872的表达矩阵，并且根据分组使用limma做差异分析，得到差异结果矩阵"><a href="#10-下载数据集GSE42872的表达矩阵，并且根据分组使用limma做差异分析，得到差异结果矩阵" class="headerlink" title="10. 下载数据集GSE42872的表达矩阵，并且根据分组使用limma做差异分析，得到差异结果矩阵"></a>10. 下载数据集GSE42872的表达矩阵，并且根据分组使用limma做差异分析，得到差异结果矩阵</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">gset = getGEO(<span class="string">'GSE42872'</span>, GSEMatrix = <span class="literal">TRUE</span>, AnnotGPL = <span class="literal">FALSE</span>, getGPL= <span class="literal">FALSE</span>)</span><br><span class="line">s &lt;- toTable(hugene10sttranscriptclusterSYMBOL)</span><br><span class="line">exprSet = exprs(gset[[<span class="number">1</span>]])</span><br><span class="line">group_list &lt;- as.character(c(rep(<span class="string">"Control"</span>,<span class="number">3</span>),rep(<span class="string">"Vemurafenib"</span>,<span class="number">3</span>)))</span><br><span class="line">dim(exprSet)</span><br><span class="line"><span class="comment"># 过滤【只保留和注释文件探针id相同的探针】</span></span><br><span class="line">efilt &lt;- exprSet[rownames(exprSet)%<span class="keyword">in</span>%s$probe_id,]</span><br><span class="line">dim(efilt)</span><br><span class="line"><span class="comment">## 整合1【目的：保证一个基因对应一个探针；如果基因和探针一一对应很好说，但如果一个基因对应多个探针：每个探针取一行的均值-》对应同一基因的探针取表达量最大的探针-》按照基因名给他们建索引，因为是按照基因来过滤探针（不用s$probe_id构建索引的原因是，看清楚我们的目的是让注释包的一个基因对应我们自己表达矩阵的一个探针。如果用s$probe_id那么结果就成了让注释包的一个探针对应我们自己表达矩阵的一个探针，当然这样也运行不成功，因为自己表达矩阵的探针过滤后的数量和注释包的探针数量不相等，这样没法一一对应。但基因名数量是不变的，什么是索引？以不变应万变的就是索引）】</span></span><br><span class="line">maxp = by(efilt,s$symbol,<span class="keyword">function</span>(x) rownames(x)[which.max(rowMeans(x))]) </span><br><span class="line">uniprobes = as.character(maxp)</span><br><span class="line">efilt=efilt[rownames(efilt)%<span class="keyword">in</span>%uniprobes,]</span><br><span class="line"><span class="comment">## 整合2【目的：将我们表达矩阵的行名换成刚才一对一的基因名，并且match这个函数保证了表达矩阵和注释包的顺序是一致的】</span></span><br><span class="line">rownames(efilt)=s[match(rownames(efilt),s$probe_id),<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 差异分析</span></span><br><span class="line">suppressMessages(<span class="keyword">library</span>(limma))</span><br><span class="line"><span class="comment">#limma需要三个矩阵：表达矩阵（efilt）、分组矩阵（design）、比较矩阵（contrast）</span></span><br><span class="line"><span class="comment">#先做一个分组矩阵～design，说明MAO是哪几个样本，MNO又是哪几个，其中1代表“是”</span></span><br><span class="line">design &lt;- model.matrix(~<span class="number">0</span>+factor(group_list))</span><br><span class="line">colnames(design) &lt;- levels(factor(group_list))</span><br><span class="line">rownames(design) &lt;- colnames(efilt)</span><br><span class="line">design</span><br><span class="line"><span class="comment">#再做一个比较矩阵【一般是case比control】</span></span><br><span class="line">contrast&lt;-makeContrasts(paste0(unique(group_list),collapse = <span class="string">"-"</span>),levels = design)</span><br><span class="line">contrast</span><br><span class="line"></span><br><span class="line">DEG &lt;- <span class="keyword">function</span>(efilt,design,contrast)&#123;</span><br><span class="line">  <span class="comment">##step1</span></span><br><span class="line">  fit &lt;- lmFit(efilt,design)</span><br><span class="line">  <span class="comment">##step2</span></span><br><span class="line">  fit2 &lt;- contrasts.fit(fit, contrast) </span><br><span class="line">  fit2 &lt;- eBayes(fit2)  </span><br><span class="line">  <span class="comment">##step3</span></span><br><span class="line">  mtx = topTable(fit2, coef=<span class="number">1</span>, n=<span class="literal">Inf</span>)</span><br><span class="line">  deg_mtx = na.omit(mtx) </span><br><span class="line">  <span class="keyword">return</span>(deg_mtx)</span><br><span class="line">&#125;</span><br><span class="line">DEG_mtx &lt;- DEG(efilt,design,contrast) <span class="comment">#得到全部的差异基因矩阵</span></span><br></pre></td></tr></table></figure><h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><p><a href="http://www.bio-info-trainee.com/3409.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/3409.html</a></p><h3 id="1-安装一些R包："><a href="#1-安装一些R包：" class="headerlink" title="1.安装一些R包："></a>1.安装一些R包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据包： ALL, CLL, pasilla, airway </span><br><span class="line">软件包：limma，DESeq2，clusterProfiler </span><br><span class="line">工具包：reshape2</span><br><span class="line">绘图包：ggplot2</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BiocManager::install(<span class="string">"reshape2"</span>, version = <span class="string">"3.8"</span>)</span><br></pre></td></tr></table></figure><h3 id="2-了解ExpressionSet对象，比如CLL包里面就有data-sCLLex-，找到它包含的元素，提取其表达矩阵-使用exprs函数-，查看其大小"><a href="#2-了解ExpressionSet对象，比如CLL包里面就有data-sCLLex-，找到它包含的元素，提取其表达矩阵-使用exprs函数-，查看其大小" class="headerlink" title="2. 了解ExpressionSet对象，比如CLL包里面就有data(sCLLex) ，找到它包含的元素，提取其表达矩阵(使用exprs函数)，查看其大小"></a>2. 了解ExpressionSet对象，比如<code>CLL</code>包里面就有<code>data(sCLLex)</code> ，找到它包含的元素，提取其表达矩阵(使用exprs函数)，查看其大小</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(CLL)</span><br><span class="line"><span class="comment"># sCLLex是一个ExpressionSet对象，封装了表达矩阵与样本信息</span></span><br><span class="line">&gt; data(sCLLex)</span><br><span class="line">&gt; sCLLex</span><br><span class="line">ExpressionSet (storageMode: lockedEnvironment) <span class="comment">#ExpressionSet对象</span></span><br><span class="line">assayData: <span class="number">12625</span> features, <span class="number">22</span> samples </span><br><span class="line">  element names: exprs </span><br><span class="line">protocolData: none</span><br><span class="line">phenoData</span><br><span class="line">  sampleNames: CLL11.CEL CLL12.CEL <span class="keyword">...</span> CLL9.CEL (<span class="number">22</span> total) <span class="comment">#样品名称</span></span><br><span class="line">  varLabels: SampleID Disease <span class="comment">#用于分组的变量</span></span><br><span class="line">  varMetadata: labelDescription</span><br><span class="line">featureData: none</span><br><span class="line">experimentData: use <span class="string">'experimentData(object)'</span></span><br><span class="line">Annotation: hgu95av2 <span class="comment">#对应的注释包</span></span><br><span class="line"><span class="comment"># 通过exprs函数提取表达矩阵</span></span><br><span class="line">&gt; exprMatrix &lt;- exprs(sCLLex)</span><br><span class="line">&gt; dim(exprMatrix)</span><br><span class="line"><span class="comment"># 通过pData函数提取样本分组信息</span></span><br><span class="line">&gt; meta &lt;- pData(sCLLex)</span><br><span class="line">&gt; table(meta$Disease)</span><br></pre></td></tr></table></figure><h3 id="3-了解-str-head-help函数，作用于第二步提取到的表达矩阵"><a href="#3-了解-str-head-help函数，作用于第二步提取到的表达矩阵" class="headerlink" title="3. 了解 str,head,help函数，作用于第二步提取到的表达矩阵"></a>3. 了解 str,head,help函数，作用于第二步提取到的表达矩阵</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; str(exprMatrix) <span class="comment">#结果表明这是一个12625行，22列的二维矩阵</span></span><br><span class="line"> num [<span class="number">1</span>:<span class="number">12625</span>, <span class="number">1</span>:<span class="number">22</span>] <span class="number">5.74</span> <span class="number">2.29</span> <span class="number">3.31</span> <span class="number">1.09</span> <span class="number">7.54</span> <span class="keyword">...</span></span><br><span class="line"> - attr(*, <span class="string">"dimnames"</span>)=List of <span class="number">2</span></span><br><span class="line">  ..$ : chr [<span class="number">1</span>:<span class="number">12625</span>] <span class="string">"1000_at"</span> <span class="string">"1001_at"</span> <span class="string">"1002_f_at"</span> <span class="string">"1003_s_at"</span> <span class="keyword">...</span></span><br><span class="line">  ..$ : chr [<span class="number">1</span>:<span class="number">22</span>] <span class="string">"CLL11.CEL"</span> <span class="string">"CLL12.CEL"</span> <span class="string">"CLL13.CEL"</span> <span class="string">"CLL14.CEL"</span> <span class="keyword">...</span></span><br><span class="line">&gt; head(exprMatrix) <span class="comment">#得到前6行结果</span></span><br><span class="line">&gt; help(exprMatrix) <span class="comment">#该函数已过时。The function, class, or data object you have asked for has been deprecated or made defunct.</span></span><br></pre></td></tr></table></figure><h3 id="4-安装并了解-hgu95av2-db-包-看看-ls-quot-package-hgu95av2-db-quot-后-显示的那些变量"><a href="#4-安装并了解-hgu95av2-db-包-看看-ls-quot-package-hgu95av2-db-quot-后-显示的那些变量" class="headerlink" title="4. 安装并了解 hgu95av2.db 包,看看 ls(&quot;package:hgu95av2.db&quot;) 后 显示的那些变量"></a>4. 安装并了解 <code>hgu95av2.db</code> 包,看看 <code>ls(&quot;package:hgu95av2.db&quot;)</code> 后 显示的那些变量</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt; BiocManager::install(<span class="string">"hgu95av2.db"</span>, version = <span class="string">"3.8"</span>)</span><br><span class="line">&gt; <span class="keyword">library</span>(hgu95av2.db)</span><br><span class="line">&gt; ls(<span class="string">"package:hgu95av2.db"</span>) <span class="comment">#可以发现hgu95v2.db中含有24个变量</span></span><br><span class="line"> [<span class="number">1</span>] <span class="string">"hgu95av2"</span>              <span class="string">"hgu95av2.db"</span>          </span><br><span class="line"> [<span class="number">3</span>] <span class="string">"hgu95av2_dbconn"</span>       <span class="string">"hgu95av2_dbfile"</span>      </span><br><span class="line"> [<span class="number">5</span>] <span class="string">"hgu95av2_dbInfo"</span>       <span class="string">"hgu95av2_dbschema"</span>    </span><br><span class="line"> [<span class="number">7</span>] <span class="string">"hgu95av2ACCNUM"</span>        <span class="string">"hgu95av2ALIAS2PROBE"</span>  </span><br><span class="line"> [<span class="number">9</span>] <span class="string">"hgu95av2CHR"</span>           <span class="string">"hgu95av2CHRLENGTHS"</span>   </span><br><span class="line">[<span class="number">11</span>] <span class="string">"hgu95av2CHRLOC"</span>        <span class="string">"hgu95av2CHRLOCEND"</span>    </span><br><span class="line">[<span class="number">13</span>] <span class="string">"hgu95av2ENSEMBL"</span>       <span class="string">"hgu95av2ENSEMBL2PROBE"</span></span><br><span class="line">[<span class="number">15</span>] <span class="string">"hgu95av2ENTREZID"</span>      <span class="string">"hgu95av2ENZYME"</span>       </span><br><span class="line">[<span class="number">17</span>] <span class="string">"hgu95av2ENZYME2PROBE"</span>  <span class="string">"hgu95av2GENENAME"</span>     </span><br><span class="line">[<span class="number">19</span>] <span class="string">"hgu95av2GO"</span>            <span class="string">"hgu95av2GO2ALLPROBES"</span> </span><br><span class="line">[<span class="number">21</span>] <span class="string">"hgu95av2GO2PROBE"</span>      <span class="string">"hgu95av2MAP"</span>          </span><br><span class="line">[<span class="number">23</span>] <span class="string">"hgu95av2MAPCOUNTS"</span>     <span class="string">"hgu95av2OMIM"</span></span><br></pre></td></tr></table></figure><h3 id="5-理解-head-toTable-hgu95av2SYMBOL-的用法，找到-TP53-基因对应的探针ID"><a href="#5-理解-head-toTable-hgu95av2SYMBOL-的用法，找到-TP53-基因对应的探针ID" class="headerlink" title="5. 理解 head(toTable(hgu95av2SYMBOL)) 的用法，找到 TP53 基因对应的探针ID"></a>5. 理解 <code>head(toTable(hgu95av2SYMBOL))</code> 的用法，找到 TP53 基因对应的探针ID</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; head(toTable(hgu95av2SYMBOL)) <span class="comment">#查看芯片ID与基因symbol之间的对应关系</span></span><br><span class="line">   probe_id  symbol</span><br><span class="line"><span class="number">1</span>   1000_at   MAPK3</span><br><span class="line"><span class="number">2</span>   1001_at    TIE1</span><br><span class="line"><span class="number">3</span> 1002_f_at CYP2C19</span><br><span class="line"><span class="number">4</span> 1003_s_at   CXCR5</span><br><span class="line"><span class="number">5</span>   1004_at   CXCR5</span><br><span class="line"><span class="number">6</span>   1005_at   DUSP1</span><br><span class="line">&gt; probe_sym &lt;- toTable(hgu95av2SYMBOL)</span><br><span class="line">&gt; subset(probe_sym, symbol == <span class="string">"TP53"</span>) <span class="comment">#使用subset抽取data.frame中的数据，筛选条件可以多样，使用逻辑关系运算组合</span></span><br><span class="line">      probe_id symbol</span><br><span class="line"><span class="number">966</span>    1939_at   TP53</span><br><span class="line"><span class="number">997</span>  1974_s_at   TP53</span><br><span class="line"><span class="number">1420</span>  31618_at   TP53</span><br></pre></td></tr></table></figure><h3 id="6-理解探针与基因的对应关系，总共多少个基因，基因最多对应多少个探针，是哪些基因，是不是因为这些基因很长，所以在其上面设计多个探针呢？"><a href="#6-理解探针与基因的对应关系，总共多少个基因，基因最多对应多少个探针，是哪些基因，是不是因为这些基因很长，所以在其上面设计多个探针呢？" class="headerlink" title="6. 理解探针与基因的对应关系，总共多少个基因，基因最多对应多少个探针，是哪些基因，是不是因为这些基因很长，所以在其上面设计多个探针呢？"></a>6. 理解探针与基因的对应关系，总共多少个基因，基因最多对应多少个探针，是哪些基因，是不是因为这些基因很长，所以在其上面设计多个探针呢？</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">library</span>(magrittr)</span><br><span class="line">&gt; probe_sym$symbol%&gt;%unique()%&gt;%length() <span class="comment">#基因的数目</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">8585</span></span><br><span class="line">&gt; probe_sym$symbol%&gt;%table()%&gt;%sort()%&gt;%tail() <span class="comment">#对应最多探针的基因有哪些</span></span><br><span class="line">.</span><br><span class="line">YME1L1  GAPDH INPP4A    MYB PTGER3  STAT1 </span><br><span class="line">     <span class="number">7</span>      <span class="number">8</span>      <span class="number">8</span>      <span class="number">8</span>      <span class="number">8</span>      <span class="number">8</span></span><br></pre></td></tr></table></figure><h3 id="7-第二步提取到的表达矩阵是12625个探针在22个样本的表达量矩阵，找到那些不在-hgu95av2-db-包收录的对应着SYMBOL的探针。"><a href="#7-第二步提取到的表达矩阵是12625个探针在22个样本的表达量矩阵，找到那些不在-hgu95av2-db-包收录的对应着SYMBOL的探针。" class="headerlink" title="7. 第二步提取到的表达矩阵是12625个探针在22个样本的表达量矩阵，找到那些不在 hgu95av2.db 包收录的对应着SYMBOL的探针。"></a>7. 第二步提取到的表达矩阵是12625个探针在22个样本的表达量矩阵，找到那些不在 <code>hgu95av2.db</code> 包收录的对应着SYMBOL的探针。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e_filter_out &lt;- exprMatrix[!rownames(exprMatrix)%<span class="keyword">in</span>%probe_sym$probe_id,]</span><br></pre></td></tr></table></figure><h3 id="8-过滤表达矩阵，删除那1165个没有对应基因名字的探针。"><a href="#8-过滤表达矩阵，删除那1165个没有对应基因名字的探针。" class="headerlink" title="8. 过滤表达矩阵，删除那1165个没有对应基因名字的探针。"></a>8. 过滤表达矩阵，删除那1165个没有对应基因名字的探针。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e_filter &lt;- exprMatrix[rownames(exprMatrix)%<span class="keyword">in</span>%probe_sym$probe_id,]</span><br></pre></td></tr></table></figure><h3 id="9-整合表达矩阵，多个探针对应一个基因的情况下，只保留在所有样本里面平均表达量最大的那个探针。"><a href="#9-整合表达矩阵，多个探针对应一个基因的情况下，只保留在所有样本里面平均表达量最大的那个探针。" class="headerlink" title="9. 整合表达矩阵，多个探针对应一个基因的情况下，只保留在所有样本里面平均表达量最大的那个探针。"></a>9. 整合表达矩阵，多个探针对应一个基因的情况下，只保留在所有样本里面平均表达量最大的那个探针。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">max_e &lt;- by(e_filter, </span><br><span class="line">            probe_sym$symbol, </span><br><span class="line">            <span class="keyword">function</span>(x) rownames(x)[which.max(rowMeans(x))])</span><br><span class="line">uniprobes &lt;- as.character(max_e)</span><br><span class="line">e_filter &lt;- e_filter[rownames(e_filter)%<span class="keyword">in</span>%uniprobes,]</span><br></pre></td></tr></table></figure><h3 id="10-把过滤后的表达矩阵更改行名为基因的symbol，因为这个时候探针和基因是一对一关系了。"><a href="#10-把过滤后的表达矩阵更改行名为基因的symbol，因为这个时候探针和基因是一对一关系了。" class="headerlink" title="10. 把过滤后的表达矩阵更改行名为基因的symbol，因为这个时候探针和基因是一对一关系了。"></a>10. 把过滤后的表达矩阵更改行名为基因的symbol，因为这个时候探针和基因是一对一关系了。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rownames(e_filter) &lt;- probe_sym[match(rownames(e_filter), probe_sym$probe_id),<span class="number">2</span>]</span><br></pre></td></tr></table></figure><h3 id="11-对第10步得到的表达矩阵进行探索，先画第一个样本的所有基因的表达量的boxplot-hist-density-，-然后画所有样本的-这些图"><a href="#11-对第10步得到的表达矩阵进行探索，先画第一个样本的所有基因的表达量的boxplot-hist-density-，-然后画所有样本的-这些图" class="headerlink" title="11. 对第10步得到的表达矩阵进行探索，先画第一个样本的所有基因的表达量的boxplot,hist,density ， 然后画所有样本的 这些图"></a>11. 对第10步得到的表达矩阵进行探索，先画第一个样本的所有基因的表达量的boxplot,hist,density ， 然后画所有样本的 这些图</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">exprM_L1 &lt;- data.frame(symbol = row.names(e_filter),</span><br><span class="line">                       expm = e_filter[,<span class="number">1</span>])</span><br><span class="line">p_box &lt;- ggplot(exprM_L1, aes(y = expm)) + geom_boxplot()</span><br><span class="line">p_hist &lt;- ggplot(exprM_L1, aes(x = expm)) + geom_histogram(bins = <span class="number">50</span>)</span><br><span class="line">p_dens &lt;- ggplot(exprM_L1, aes(x = expm)) + geom_density()</span><br></pre></td></tr></table></figure><h3 id="12-理解统计学指标mean-median-max-min-sd-var-mad并计算出每个基因在所有样本的这些统计学指标，最后按照mad值排序，取top-50-mad值的基因，得到列表。"><a href="#12-理解统计学指标mean-median-max-min-sd-var-mad并计算出每个基因在所有样本的这些统计学指标，最后按照mad值排序，取top-50-mad值的基因，得到列表。" class="headerlink" title="12. 理解统计学指标mean,median,max,min,sd,var,mad并计算出每个基因在所有样本的这些统计学指标，最后按照mad值排序，取top 50 mad值的基因，得到列表。"></a>12. 理解统计学指标mean,median,max,min,sd,var,mad并计算出每个基因在所有样本的这些统计学指标，最后按照mad值排序，取top 50 mad值的基因，得到列表。</h3><blockquote><p>注意：这个题目出的并不合规，请仔细看。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">e_mean &lt;- rowMeans(e_filter)</span><br><span class="line">e_median &lt;- rowMedians(e_filter)</span><br><span class="line">e_max &lt;- rowMax(e_filter)</span><br><span class="line">e_min &lt;- rowMin(e_filter)</span><br><span class="line">e_sd &lt;- apply(e_filter, <span class="number">1</span>, sd) %&gt;% sort() <span class="comment">#没有对应的row系列函数的话，可以使用apply方法</span></span><br><span class="line">e_var &lt;- apply(e_filter, <span class="number">1</span>, var) %&gt;% sort() </span><br><span class="line">e_mad_50 &lt;- apply(e_filter, <span class="number">1</span>, mad) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">&gt; names(e_mad_50)</span><br><span class="line"> [<span class="number">1</span>] <span class="string">"PFN2"</span>     <span class="string">"TNFSF9"</span>   <span class="string">"ARHGAP44"</span> <span class="string">"P2RY14"</span>   <span class="string">"THEMIS2"</span>  <span class="string">"LPL"</span>     </span><br><span class="line"> [<span class="number">7</span>] <span class="string">"ANXA4"</span>    <span class="string">"DUSP6"</span>    <span class="string">"DUSP5"</span>    <span class="string">"H1FX"</span>     <span class="string">"FLNA"</span>     <span class="string">"CLEC2B"</span>  </span><br><span class="line">[<span class="number">13</span>] <span class="string">"TSPYL2"</span>   <span class="string">"ZNF266"</span>   <span class="string">"S100A9"</span>   <span class="string">"NR4A2"</span>    <span class="string">"TGFBI"</span>    <span class="string">"ARF6"</span>    </span><br><span class="line">[<span class="number">19</span>] <span class="string">"APBB2"</span>    <span class="string">"VCAN"</span>     <span class="string">"RBM38"</span>    <span class="string">"CAPG"</span>     <span class="string">"PLXNC1"</span>   <span class="string">"RGS2"</span>    </span><br><span class="line">[<span class="number">25</span>] <span class="string">"RNASE6"</span>   <span class="string">"VAMP5"</span>    <span class="string">"CYBB"</span>     <span class="string">"GNLY"</span>     <span class="string">"CCL3"</span>     <span class="string">"OAS1"</span>    </span><br><span class="line">[<span class="number">31</span>] <span class="string">"TRIB2"</span>    <span class="string">"ZNF804A"</span>  <span class="string">"IGH"</span>      <span class="string">"PCDH9"</span>    <span class="string">"VIPR1"</span>    <span class="string">"COBLL1"</span>  </span><br><span class="line">[<span class="number">37</span>] <span class="string">"GUSBP11"</span>  <span class="string">"S100A8"</span>   <span class="string">"HBB"</span>      <span class="string">"LHFPL2"</span>   <span class="string">"FCN1"</span>     <span class="string">"ZAP70"</span>   </span><br><span class="line">[<span class="number">43</span>] <span class="string">"IGLC1"</span>    <span class="string">"LGALS1"</span>   <span class="string">"FOS"</span>      <span class="string">"SLAMF1"</span>   <span class="string">"TCF7"</span>     <span class="string">"DMD"</span>     </span><br><span class="line">[<span class="number">49</span>] <span class="string">"IGF2BP3"</span>  <span class="string">"FAM30A"</span></span><br></pre></td></tr></table></figure><h3 id="13-根据第12步骤得到top-50-mad值的基因列表来取表达矩阵的子集，并且热图可视化子表达矩阵。试试看其它5种热图的包的不同效果。"><a href="#13-根据第12步骤得到top-50-mad值的基因列表来取表达矩阵的子集，并且热图可视化子表达矩阵。试试看其它5种热图的包的不同效果。" class="headerlink" title="13. 根据第12步骤得到top 50 mad值的基因列表来取表达矩阵的子集，并且热图可视化子表达矩阵。试试看其它5种热图的包的不同效果。"></a>13. 根据第12步骤得到top 50 mad值的基因列表来取表达矩阵的子集，并且热图可视化子表达矩阵。试试看其它5种热图的包的不同效果。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e50 &lt;- e_filter[names(e_mad_50),]</span><br><span class="line">pheatmap::pheatmap(e50)</span><br><span class="line">tt_50 &lt;- t(scale(t(e50)))</span><br><span class="line">pheatmap::pheatmap(tt_50)</span><br></pre></td></tr></table></figure><h3 id="14-取不同统计学指标mean-median-max-mean-sd-var-mad的各top50基因列表，使用UpSetR包来看他们之间的overlap情况。"><a href="#14-取不同统计学指标mean-median-max-mean-sd-var-mad的各top50基因列表，使用UpSetR包来看他们之间的overlap情况。" class="headerlink" title="14. 取不同统计学指标mean,median,max,mean,sd,var,mad的各top50基因列表，使用UpSetR包来看他们之间的overlap情况。"></a>14. 取不同统计学指标mean,median,max,mean,sd,var,mad的各top50基因列表，使用UpSetR包来看他们之间的overlap情况。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">e_mean_50 &lt;- rowMeans(e_filter) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_median_50 &lt;- rowMedians(e_filter) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_max_50 &lt;- rowMax(e_filter) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_min_50 &lt;- rowMin(e_filter) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_sd_50 &lt;- apply(e_filter, <span class="number">1</span>, sd) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_var_50 &lt;- apply(e_filter, <span class="number">1</span>, var) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line">e_mad_50 &lt;- apply(e_filter, <span class="number">1</span>, mad) %&gt;% sort() %&gt;% tail(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">g_all &lt;- unique(c(names(e_mean_50),</span><br><span class="line">                  names(e_median_50),</span><br><span class="line">                  names(e_max_50),</span><br><span class="line">                  names(e_min_50),</span><br><span class="line">                  names(e_sd_50),</span><br><span class="line">                  names(e_var_50),</span><br><span class="line">                  names(e_mad_50)))</span><br><span class="line">g_upset &lt;- data.frame(g_all = g_all,</span><br><span class="line">                      g_mean=ifelse(g_all %<span class="keyword">in</span>% names(e_mean_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_median=ifelse(g_all %<span class="keyword">in</span>% names(e_median_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_max=ifelse(g_all %<span class="keyword">in</span>% names(e_max_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_min=ifelse(g_all %<span class="keyword">in</span>% names(e_min_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_sd=ifelse(g_all %<span class="keyword">in</span>% names(e_sd_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_var=ifelse(g_all %<span class="keyword">in</span>% names(e_var_50),<span class="number">1</span>,<span class="number">0</span>),</span><br><span class="line">                      g_mad=ifelse(g_all %<span class="keyword">in</span>% names(e_mad_50),<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">                      )</span><br><span class="line">UpSetR::upset(g_upset, nsets = <span class="number">7</span>)</span><br></pre></td></tr></table></figure><h3 id="15-在第二步的基础上面提取CLL包里面的data-sCLLex-数据对象的样本的表型数据。"><a href="#15-在第二步的基础上面提取CLL包里面的data-sCLLex-数据对象的样本的表型数据。" class="headerlink" title="15. 在第二步的基础上面提取CLL包里面的data(sCLLex) 数据对象的样本的表型数据。"></a>15. 在第二步的基础上面提取<code>CLL</code>包里面的<code>data(sCLLex)</code> 数据对象的样本的表型数据。</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pdata=pData(sCLLex)</span><br><span class="line">group_list=as.character(pdata[,<span class="number">2</span>])</span><br><span class="line">group_list</span><br></pre></td></tr></table></figure><h3 id="16-对所有样本的表达矩阵进行聚类并且绘图，然后添加样本的临床表型数据信息-更改样本名"><a href="#16-对所有样本的表达矩阵进行聚类并且绘图，然后添加样本的临床表型数据信息-更改样本名" class="headerlink" title="16. 对所有样本的表达矩阵进行聚类并且绘图，然后添加样本的临床表型数据信息(更改样本名)"></a>16. 对所有样本的表达矩阵进行聚类并且绘图，然后添加样本的临床表型数据信息(更改样本名)</h3><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://www.jianshu.com/p/993b4022363f" target="_blank" rel="noopener">https://www.jianshu.com/p/993b4022363f</a></p><p><a href="http://www.bio-info-trainee.com/3415.html" target="_blank" rel="noopener">http://www.bio-info-trainee.com/3415.html</a></p><p><a href="https://www.statmethods.net/stats/withby.html" target="_blank" rel="noopener">https://www.statmethods.net/stats/withby.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;生信技能树的R语言练习题&lt;/p&gt;
    
    </summary>
    
    
      <category term="R" scheme="https://sr-c.github.io/tags/R/"/>
    
      <category term="生信技能树" scheme="https://sr-c.github.io/tags/%E7%94%9F%E4%BF%A1%E6%8A%80%E8%83%BD%E6%A0%91/"/>
    
      <category term="biotrainee" scheme="https://sr-c.github.io/tags/biotrainee/"/>
    
  </entry>
  
  <entry>
    <title>使用SERF鉴定端粒序列</title>
    <link href="https://sr-c.github.io/2019/03/08/SERF-identify-telomere-sequences/"/>
    <id>https://sr-c.github.io/2019/03/08/SERF-identify-telomere-sequences/</id>
    <published>2019-03-08T12:13:12.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">使用SERF在线工具从头预测端粒序列</p><a id="more"></a><h2 id="端粒重复序列"><a href="#端粒重复序列" class="headerlink" title="端粒重复序列"></a>端粒重复序列</h2><p><a href="https://en.wikipedia.org/wiki/Telomere" target="_blank" rel="noopener">端粒</a>是染色体末端的一端核酸序列，起着保护染色体末端免于降解，防止与相邻的染色体错误融合的作用。其名称来源于希腊语 <em>τέλος</em> (end)和<em>μέρος</em> (part) 。对于脊椎动物，端粒的序列是<code>AGGGTT</code>，其对应的互补序列就是<code>TCCCAA</code>，还有这一个单链的<code>TTAGGG</code>末尾。这段<code>TTAGGG</code>的序列在人类基因组中约重复2500次。人类的平均端粒长度由出生时的约11 kb，在老年时降至短于4 kb. 而男性端粒的平均缩短速度要快于女性。</p><p>在染色体复制时，DNA复制酶在染色体末端不能继续复制，因此在每次复制时，染色体的末端都会缩短。这是由于冈崎片段需要RNA引物连接到后随链的前端。在细胞分裂时，端粒是染色体末端的缓冲区；防止基因被截短。端粒本身被端粒保护蛋白复合体，还有端粒DNA编码的RNA覆盖。</p><p>不同物种的端粒序列不同，目前已知的端粒序列数据在<a href="http://telomerase.asu.edu/sequences_telomere.html" target="_blank" rel="noopener">端粒数据库</a>中可以访问，目前的版本在2018年8月更新。</p><h2 id="预测物种的端粒序列"><a href="#预测物种的端粒序列" class="headerlink" title="预测物种的端粒序列"></a>预测物种的端粒序列</h2><p>对于一个端粒序列仍然未知的物种，我们怎么发现其端粒的序列呢？</p><p>在最近发表的一篇<a href="https://www.future-science.com/doi/full/10.2144/btn-2018-0057#" target="_blank" rel="noopener">文章</a>指出，目前由bioserf.org提供的在线服务 sequence repeat finder (SERF) 可以进行。用户提供全基因组组装的结果（FASTA 格式）或二代测序的短读长数据（FASTQ 格式）即可。用户在注册后即可使用。</p><h3 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h3><table><thead><tr><th></th><th>Telomere Identification Protocol</th></tr></thead><tbody><tr><td>FASTQ</td><td>Input Reads from NGS</td></tr><tr><td>FASTA</td><td>Input Assembled Contigs.</td></tr><tr><td>Contiguousall</td><td>Analysis Type</td></tr><tr><td>TG</td><td>BaseType (must contain these base types in the identified repeats)</td></tr><tr><td>2</td><td>BaseTypeMincount (must have atleast 2 of either type in the identified repeat)</td></tr><tr><td>3</td><td>MinRepeats to treat as tandem</td></tr><tr><td>5</td><td>MinBPSize of repeat motif</td></tr><tr><td>15</td><td>MaxBPSize of repeat motif</td></tr><tr><td>90%</td><td>MatchQuality (Tandem repeats to cover atleast 90% of the entire read. <strong>Iterate with lower figure until repeats are identified</strong>.)</td></tr><tr><td>2000</td><td>Base count to split large assembled contigs in FASTA file for faster results. Defaults to 0 for FASTQ reads.</td></tr><tr><td>Yes</td><td>Permutate</td></tr><tr><td>Yes</td><td>Exclude Homopolymers</td></tr><tr><td>Yes</td><td>Exclude Supersets</td></tr><tr><td>Yes</td><td>List Cluster Totals</td></tr><tr><td>Notes</td><td>For large input  data (1GB+), analyze in smaller minbp-maxbp chunks 7-10, 11-20, 21-30  etc (instead of 7-60) to see incremental results</td></tr></tbody></table><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><p>这是示例公共数据中洋葱的输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Results file (last 20 lines):</span><br><span class="line"># ANALYSIS BEGIN Fri Mar 8 01:54:00 2019</span><br><span class="line"># Input = BSF1-AlliumCepa.fastq.gz</span><br><span class="line"># Output = Results-32188243-3-5-15-Q90-TG-2-contiguousall.txt</span><br><span class="line"></span><br><span class="line"># SEGMENT-WISE RESULTS</span><br><span class="line"># Motif, Repeats, Position, Size, Bases, Quality, Segment#, SegmentSize</span><br><span class="line">TGGGCTCGGTTA, 3, 1, 12, 36, 94.7, 304572, 38</span><br><span class="line">TCGGTTATGGGC, 3, 1, 12, 36, 92.3, 317960, 39</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CLUSTER BY POSITION</span><br><span class="line"># Motif, Repeats, Repeats%, Bases, Bases%, Genome%, Position, Size</span><br><span class="line">TGGGCTCGGTTA, 3, 50.0, 36, 50.0, 0.0, 1, 12</span><br><span class="line">TGGGCTCGGTTA, 3, 50.0, 36, 50.0, 0.0, 1, 12</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># CLUSTER TOTALS</span><br><span class="line"># Motif, Repeats, Repeats%, Bases, Bases%, Genome%, Size</span><br><span class="line">TGGGCTCGGTTA, 6, 100.0, 72, 100.0, 0.0, 12</span><br><span class="line"># ANALYSIS END Fri Mar 8 02:28:54 2019</span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://www.future-science.com/doi/full/10.2144/btn-2018-0057#" target="_blank" rel="noopener">https://www.future-science.com/doi/full/10.2144/btn-2018-0057#</a></p><p><a href="https://bioserf.org/r/p/swebserf" target="_blank" rel="noopener">https://bioserf.org/r/p/swebserf</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;使用SERF在线工具从头预测端粒序列&lt;/p&gt;
    
    </summary>
    
    
      <category term="telomere" scheme="https://sr-c.github.io/tags/telomere/"/>
    
      <category term="端粒" scheme="https://sr-c.github.io/tags/%E7%AB%AF%E7%B2%92/"/>
    
  </entry>
  
  <entry>
    <title>conda源的配置</title>
    <link href="https://sr-c.github.io/2019/03/03/conda-channels-order/"/>
    <id>https://sr-c.github.io/2019/03/03/conda-channels-order/</id>
    <published>2019-03-03T09:05:12.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">conda channel的设置</p><a id="more"></a><h2 id="conda升级"><a href="#conda升级" class="headerlink" title="conda升级"></a>conda升级</h2><p>conda提示的升级方案为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update -n base conda</span><br></pre></td></tr></table></figure><p>按照提示进行升级，但升级提示竟然会将原本3.6版本的<code>python</code>降级至2.7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The following packages will be DOWNGRADED:</span><br><span class="line"></span><br><span class="line">    python:          3.6.6-h5001a0f_3       https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge --&gt; 2.7.15-h721da81_1008      https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge</span><br></pre></td></tr></table></figure><p>这表明，conda源配置中的<code>conda-forge</code>优先级过高，会出现一定的问题。检查一下原来的<code>.condarc</code>文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line"><span class="comment">#  - bioconda</span></span><br><span class="line"><span class="comment">#  - conda-forge</span></span><br><span class="line"><span class="comment">#  - defaults</span></span><br><span class="line">  - r</span><br><span class="line">show_channel_urls: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>竟然将官方的defaults源注释掉了😓</p><p>不合理的顺序还可能会导致意想不到的<a href="http://vincebuffalo.org/notes/2017/08/28/notes-on-anaconda.html" target="_blank" rel="noopener">错误</a>，举例如下</p><blockquote><p>并且举了一个例子,如果你有一个X包来自于<code>conda-forge</code>,一个Y包来自于<code>biconda</code>才能让Z包顺利工作.但是在YAML里面不知道X,Y那个包是来自于<code>conda-forge</code>,那个是来自于<code>bioconda</code>. 比如说<code>conda-forge</code>有一个<code>bzip2-1.0.6</code>,里面有对应的动态<code>.so</code>文件,而<code>defaults</code>也有<code>bzip2-1.0.6</code>,但是没有<code>.so</code>文件. 但是根据按照顺序,conda先从<code>default</code>里面找到了<code>bzip2-1.0.6</code>, 结果你就会在运行软件的时候找不到依赖文件.</p></blockquote><p>但hoptop<a href="https://www.jianshu.com/p/7025139ac7d4" target="_blank" rel="noopener">认为</a>一定要将default源放在最后，我认为还是不能同意。因为上述的conda更新问题就是由于default源（或第三方镜像的default源）的优先级低于<code>conda-forge</code>。因此，我认为至少<code>conda-forge</code>的优先级不宜过高。</p><h2 id="合理配置conda源顺序"><a href="#合理配置conda源顺序" class="headerlink" title="合理配置conda源顺序"></a>合理配置conda源顺序</h2><p>参照前人的<a href="https://shengxin.ren/article/432" target="_blank" rel="noopener">方案</a>，我们需要将<code>conda-forge</code>的优先级降低，仅作为官方源和<code>bioconda</code>源的补充。修改后的配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - bioconda</span><br><span class="line">  - defaults</span><br><span class="line">  - r</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</span><br><span class="line">  - conda-forge</span><br><span class="line">show_channel_urls: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://shengxin.ren/article/432" target="_blank" rel="noopener">https://shengxin.ren/article/432</a></p><p><a href="https://www.jianshu.com/p/7025139ac7d4" target="_blank" rel="noopener">https://www.jianshu.com/p/7025139ac7d4</a></p><p><a href="http://vincebuffalo.org/notes/2017/08/28/notes-on-anaconda.html" target="_blank" rel="noopener">http://vincebuffalo.org/notes/2017/08/28/notes-on-anaconda.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;conda channel的设置&lt;/p&gt;
    
    </summary>
    
    
      <category term="conda" scheme="https://sr-c.github.io/tags/conda/"/>
    
  </entry>
  
  <entry>
    <title>SALSA安装</title>
    <link href="https://sr-c.github.io/2019/02/28/SALSA-install/"/>
    <id>https://sr-c.github.io/2019/02/28/SALSA-install/</id>
    <published>2019-02-28T14:16:51.000Z</published>
    <updated>2019-06-12T09:50:17.295Z</updated>
    
    <content type="html"><![CDATA[<p class="description">SALSA的编译安装</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/machinegun/SALSA.git</span><br><span class="line"></span><br><span class="line">conda create -n SALSA python=2.7</span><br><span class="line"><span class="built_in">source</span> activate SALSA</span><br><span class="line">conda install boost networkx==1.11</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> SALSA</span><br><span class="line">make</span><br></pre></td></tr></table></figure><h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">g++ -O3 -Wall -Wextra -std=c++11 -o correct_links correct_links.cpp</span><br><span class="line">correct_links.cpp:12:10: fatal error: boost/config.hpp: No such file or directory</span><br><span class="line"> <span class="comment">#include &lt;boost/config.hpp&gt;</span></span><br><span class="line">          ^~~~~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br></pre></td></tr></table></figure><p>这表明，编译过程中未配置好之前的boost环境，于是我们查看发现原来已经安装了boost，因此，我们卸载conda环境中的boost直接使用原环境中的boost进行编译，但是仍然得到报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/include/boost/graph/graph_concepts.hpp:92:18: error: using invalid field <span class="string">'boost::concepts::IncidenceGraph&lt;G&gt;::p'</span></span><br><span class="line">             e = *p.first;</span><br><span class="line">                  ^</span><br><span class="line">make: *** [correct_links] Error 1</span><br></pre></td></tr></table></figure><p>经过查询似乎是原来环境中的boost版本过低导致，因此，还是需要手动指定conda环境中的boost</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CPLUS_INCLUDE_PATH=~/miniconda3/envs/SALSA/include:<span class="variable">$CPLUS_INCLUDE_PATH</span></span><br><span class="line"><span class="built_in">export</span> BOOST_INCLUDE=~/miniconda3/envs/SALSA/include</span><br></pre></td></tr></table></figure><p>之后可完成编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="built_in">source</span> ~/.bashrc</span><br><span class="line">&gt; make clean</span><br><span class="line">&gt; make</span><br><span class="line">g++ -O3 -Wall -Wextra -std=c++11 -o correct_links correct_links.cpp</span><br><span class="line">correct_links.cpp: In <span class="keyword">function</span> <span class="string">'std::vector&lt;std::__cxx11::basic_string&lt;char&gt; &gt; split(const string&amp;, size_t)'</span>:</span><br><span class="line">correct_links.cpp:46:19: warning: comparison between signed and unsigned <span class="built_in">integer</span> expressions [-Wsign-compare]</span><br><span class="line">   <span class="keyword">for</span>(int i = 0;i &lt; s.length();i+=count)</span><br><span class="line">                 ~~^~~~~~~~~~~~</span><br><span class="line">correct_links.cpp: In <span class="keyword">function</span> <span class="string">'int main(int, char**)'</span>:</span><br><span class="line">correct_links.cpp:237:25: warning: comparison between signed and unsigned <span class="built_in">integer</span> expressions [-Wsign-compare]</span><br><span class="line">         <span class="keyword">for</span>(int i = 0;i &lt; orientations.size();i++)</span><br><span class="line">                       ~~^~~~~~~~~~~~~~~~~~~~~</span><br></pre></td></tr></table></figure><h3 id="查看环境中boost的版本"><a href="#查看环境中boost的版本" class="headerlink" title="查看环境中boost的版本"></a>查看环境中boost的版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/include/boost/version.hpp | grep <span class="string">"BOOST_LIB_VERSION"</span></span><br><span class="line">//  BOOST_LIB_VERSION must be defined to be the same as BOOST_VERSION</span><br><span class="line"><span class="comment">#define BOOST_LIB_VERSION "1_41"</span></span><br><span class="line">cat ~/miniconda3/envs/SALSA/include/boost/version.hpp | grep <span class="string">"BOOST_LIB_VERSION"</span></span><br><span class="line">//  BOOST_LIB_VERSION must be defined to be the same as BOOST_VERSION</span><br><span class="line"><span class="comment">#define BOOST_LIB_VERSION "1_69"</span></span><br></pre></td></tr></table></figure><h2 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h2><p><a href="https://blog.csdn.net/lijingpengchina/article/details/9100775" target="_blank" rel="noopener">https://blog.csdn.net/lijingpengchina/article/details/9100775</a></p><p><a href="https://blog.csdn.net/dongchongyang/article/details/72718687" target="_blank" rel="noopener">https://blog.csdn.net/dongchongyang/article/details/72718687</a></p><p><a href="https://blog.csdn.net/Doubao93/article/details/80176537" target="_blank" rel="noopener">https://blog.csdn.net/Doubao93/article/details/80176537</a></p><p><a href="https://askubuntu.com/questions/147474/how-can-i-find-boost-version" target="_blank" rel="noopener">https://askubuntu.com/questions/147474/how-can-i-find-boost-version</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p class=&quot;description&quot;&gt;SALSA的编译安装&lt;/p&gt;
    
    </summary>
    
    
      <category term="debug" scheme="https://sr-c.github.io/tags/debug/"/>
    
      <category term="Hi-C" scheme="https://sr-c.github.io/tags/Hi-C/"/>
    
      <category term="SALSA" scheme="https://sr-c.github.io/tags/SALSA/"/>
    
  </entry>
  
</feed>
